2019-05-30 10:08:27,731 INFO com.manytomany.ManyToManyApplication [restartedMain] Starting ManyToManyApplication on Cgt-Jod-Lin-Adityam with PID 4462 (/home/cgt_jod_lin_kanhavm/eclipse-workspace/ManyToMany/target/classes started by cgt_jod_lin_kanhavm in /home/cgt_jod_lin_kanhavm/eclipse-workspace/ManyToMany)
2019-05-30 10:08:27,838 INFO com.manytomany.ManyToManyApplication [restartedMain] No active profile set, falling back to default profiles: default
2019-05-30 10:08:32,745 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2019-05-30 10:08:32,746 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.19]
2019-05-30 10:08:33,267 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2019-05-30 10:08:33,949 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2019-05-30 10:08:34,553 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2019-05-30 10:08:34,729 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2019-05-30 10:08:34,933 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate Core {5.3.10.Final}
2019-05-30 10:08:34,934 INFO org.hibernate.cfg.Environment [restartedMain] HHH000206: hibernate.properties not found
2019-05-30 10:08:35,150 INFO org.hibernate.annotations.common.Version [restartedMain] HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2019-05-30 10:08:35,241 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration boolean -> org.hibernate.type.BooleanType@35d82b2d
2019-05-30 10:08:35,242 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration boolean -> org.hibernate.type.BooleanType@35d82b2d
2019-05-30 10:08:35,242 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@35d82b2d
2019-05-30 10:08:35,243 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5fbc75dc
2019-05-30 10:08:35,243 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration true_false -> org.hibernate.type.TrueFalseType@25b88d7f
2019-05-30 10:08:35,244 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration yes_no -> org.hibernate.type.YesNoType@6113176b
2019-05-30 10:08:35,245 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration byte -> org.hibernate.type.ByteType@7b9320d5
2019-05-30 10:08:35,245 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration byte -> org.hibernate.type.ByteType@7b9320d5
2019-05-30 10:08:35,245 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7b9320d5
2019-05-30 10:08:35,246 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration character -> org.hibernate.type.CharacterType@56b59870
2019-05-30 10:08:35,246 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration char -> org.hibernate.type.CharacterType@56b59870
2019-05-30 10:08:35,246 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@56b59870
2019-05-30 10:08:35,247 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration short -> org.hibernate.type.ShortType@5817daf8
2019-05-30 10:08:35,247 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration short -> org.hibernate.type.ShortType@5817daf8
2019-05-30 10:08:35,247 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5817daf8
2019-05-30 10:08:35,248 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration integer -> org.hibernate.type.IntegerType@70c474f9
2019-05-30 10:08:35,249 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration int -> org.hibernate.type.IntegerType@70c474f9
2019-05-30 10:08:35,249 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@70c474f9
2019-05-30 10:08:35,250 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration long -> org.hibernate.type.LongType@4f78deec
2019-05-30 10:08:35,250 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration long -> org.hibernate.type.LongType@4f78deec
2019-05-30 10:08:35,250 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Long -> org.hibernate.type.LongType@4f78deec
2019-05-30 10:08:35,251 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration float -> org.hibernate.type.FloatType@77e57d9c
2019-05-30 10:08:35,251 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration float -> org.hibernate.type.FloatType@77e57d9c
2019-05-30 10:08:35,251 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@77e57d9c
2019-05-30 10:08:35,252 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration double -> org.hibernate.type.DoubleType@6a8186f3
2019-05-30 10:08:35,252 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration double -> org.hibernate.type.DoubleType@6a8186f3
2019-05-30 10:08:35,253 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6a8186f3
2019-05-30 10:08:35,253 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2042054f
2019-05-30 10:08:35,254 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2042054f
2019-05-30 10:08:35,255 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@720d78a4
2019-05-30 10:08:35,255 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@720d78a4
2019-05-30 10:08:35,256 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration string -> org.hibernate.type.StringType@4b815bce
2019-05-30 10:08:35,256 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.String -> org.hibernate.type.StringType@4b815bce
2019-05-30 10:08:35,257 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@598ecc8c
2019-05-30 10:08:35,257 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7a578e80
2019-05-30 10:08:35,258 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration url -> org.hibernate.type.UrlType@2371a7a1
2019-05-30 10:08:35,258 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.net.URL -> org.hibernate.type.UrlType@2371a7a1
2019-05-30 10:08:35,259 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Duration -> org.hibernate.type.DurationType@74990ce2
2019-05-30 10:08:35,260 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@74990ce2
2019-05-30 10:08:35,261 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Instant -> org.hibernate.type.InstantType@280f5712
2019-05-30 10:08:35,262 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@280f5712
2019-05-30 10:08:35,263 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7d786080
2019-05-30 10:08:35,263 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7d786080
2019-05-30 10:08:35,264 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6b5d09db
2019-05-30 10:08:35,265 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6b5d09db
2019-05-30 10:08:35,266 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6e049393
2019-05-30 10:08:35,266 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6e049393
2019-05-30 10:08:35,267 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6035de5d
2019-05-30 10:08:35,267 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6035de5d
2019-05-30 10:08:35,268 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@fc494b4
2019-05-30 10:08:35,268 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@fc494b4
2019-05-30 10:08:35,270 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7730463f
2019-05-30 10:08:35,270 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7730463f
2019-05-30 10:08:35,271 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration date -> org.hibernate.type.DateType@287c662a
2019-05-30 10:08:35,271 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Date -> org.hibernate.type.DateType@287c662a
2019-05-30 10:08:35,272 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration time -> org.hibernate.type.TimeType@7c3e58a3
2019-05-30 10:08:35,272 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7c3e58a3
2019-05-30 10:08:35,273 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration timestamp -> org.hibernate.type.TimestampType@10fe7be5
2019-05-30 10:08:35,273 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10fe7be5
2019-05-30 10:08:35,273 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10fe7be5
2019-05-30 10:08:35,274 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@569c082e
2019-05-30 10:08:35,274 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration calendar -> org.hibernate.type.CalendarType@186a584d
2019-05-30 10:08:35,274 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@186a584d
2019-05-30 10:08:35,274 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@186a584d
2019-05-30 10:08:35,275 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@76ba3563
2019-05-30 10:08:35,276 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration locale -> org.hibernate.type.LocaleType@44b4c47a
2019-05-30 10:08:35,276 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@44b4c47a
2019-05-30 10:08:35,277 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration currency -> org.hibernate.type.CurrencyType@40a29ba5
2019-05-30 10:08:35,277 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@40a29ba5
2019-05-30 10:08:35,278 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration timezone -> org.hibernate.type.TimeZoneType@318efbc9
2019-05-30 10:08:35,278 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@318efbc9
2019-05-30 10:08:35,279 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration class -> org.hibernate.type.ClassType@2e6159ec
2019-05-30 10:08:35,279 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2e6159ec
2019-05-30 10:08:35,280 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2d5b6f2b
2019-05-30 10:08:35,280 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2d5b6f2b
2019-05-30 10:08:35,281 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@b9d976
2019-05-30 10:08:35,282 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration binary -> org.hibernate.type.BinaryType@1839fb86
2019-05-30 10:08:35,282 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration byte[] -> org.hibernate.type.BinaryType@1839fb86
2019-05-30 10:08:35,282 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [B -> org.hibernate.type.BinaryType@1839fb86
2019-05-30 10:08:35,283 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@53f96a8
2019-05-30 10:08:35,283 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@53f96a8
2019-05-30 10:08:35,283 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@53f96a8
2019-05-30 10:08:35,284 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration row_version -> org.hibernate.type.RowVersionType@1f5d7e57
2019-05-30 10:08:35,284 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration image -> org.hibernate.type.ImageType@261f0987
2019-05-30 10:08:35,285 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration characters -> org.hibernate.type.CharArrayType@3ceafcc7
2019-05-30 10:08:35,286 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration char[] -> org.hibernate.type.CharArrayType@3ceafcc7
2019-05-30 10:08:35,286 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [C -> org.hibernate.type.CharArrayType@3ceafcc7
2019-05-30 10:08:35,287 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22024008
2019-05-30 10:08:35,287 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22024008
2019-05-30 10:08:35,287 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22024008
2019-05-30 10:08:35,288 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration text -> org.hibernate.type.TextType@23b0507e
2019-05-30 10:08:35,289 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration ntext -> org.hibernate.type.NTextType@7340117c
2019-05-30 10:08:35,290 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration blob -> org.hibernate.type.BlobType@12ad7453
2019-05-30 10:08:35,290 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12ad7453
2019-05-30 10:08:35,291 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7c574667
2019-05-30 10:08:35,292 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration clob -> org.hibernate.type.ClobType@2a84e336
2019-05-30 10:08:35,292 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2a84e336
2019-05-30 10:08:35,293 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration nclob -> org.hibernate.type.NClobType@2e11fe37
2019-05-30 10:08:35,293 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2e11fe37
2019-05-30 10:08:35,294 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4f9f9b65
2019-05-30 10:08:35,295 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@9e0c72b
2019-05-30 10:08:35,297 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration serializable -> org.hibernate.type.SerializableType@ac13dd9
2019-05-30 10:08:35,300 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration object -> org.hibernate.type.ObjectType@1b4a5b85
2019-05-30 10:08:35,300 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1b4a5b85
2019-05-30 10:08:35,301 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@41516f80
2019-05-30 10:08:35,301 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@80e825c
2019-05-30 10:08:35,301 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@26cca0ff
2019-05-30 10:08:35,301 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2c2c7dcf
2019-05-30 10:08:35,301 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@66cb2aa5
2019-05-30 10:08:35,302 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1a2b5842
2019-05-30 10:08:35,302 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5923d8a0
2019-05-30 10:08:35,302 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@162e144e
2019-05-30 10:08:35,435 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2019-05-30 10:08:35,497 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [restartedMain] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6a292e1e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@74d00407]
2019-05-30 10:08:35,944 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [restartedMain] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6a292e1e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5a8b10e8]
2019-05-30 10:08:36,841 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [restartedMain] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5a8b10e8] for TypeConfiguration
2019-05-30 10:08:38,063 INFO com.manytomany.ManyToManyApplication [restartedMain] Started ManyToManyApplication in 11.259 seconds (JVM running for 13.11)
2019-05-30 10:10:21,812 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8080-exec-3] Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-05-30 10:10:22,132 DEBUG org.hibernate.SQL [http-nio-8080-exec-3] select employee0_.employee_id as employee1_0_0_, employee0_.emp_age as emp_age2_0_0_, employee0_.emp_name as emp_name3_0_0_ from employee employee0_ where employee0_.employee_id=?
2019-05-30 10:10:22,241 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [INTEGER] - [5]
2019-05-30 10:10:22,589 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([emp_age2_0_0_] : [INTEGER]) - [26]
2019-05-30 10:10:22,592 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([emp_name3_0_0_] : [VARCHAR]) - [Maxy]
2019-05-30 10:10:22,631 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-3] Created collection wrapper: [com.manytomany.model.Employee.projects#5]
2019-05-30 10:10:22,646 DEBUG org.hibernate.SQL [http-nio-8080-exec-3] select projects0_.employee_id as employee1_1_0_, projects0_.project_id as project_2_1_0_, project1_.project_id as project_1_2_1_, project1_.project_description as project_2_2_1_, project1_.project_name as project_3_2_1_ from employee_project projects0_ inner join project project1_ on projects0_.project_id=project1_.project_id where projects0_.employee_id=?
2019-05-30 10:10:22,646 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [INTEGER] - [5]
2019-05-30 10:10:22,883 DEBUG org.hibernate.SQL [http-nio-8080-exec-3] delete from employee where employee_id=?
2019-05-30 10:10:22,884 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [INTEGER] - [5]
2019-05-30 10:10:31,603 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] select employee0_.employee_id as employee1_0_0_, employee0_.emp_age as emp_age2_0_0_, employee0_.emp_name as emp_name3_0_0_ from employee employee0_ where employee0_.employee_id=?
2019-05-30 10:10:31,609 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [INTEGER] - [10]
2019-05-30 10:10:31,616 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([emp_age2_0_0_] : [INTEGER]) - [26]
2019-05-30 10:10:31,616 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([emp_name3_0_0_] : [VARCHAR]) - [Mickey]
2019-05-30 10:10:31,617 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-2] Created collection wrapper: [com.manytomany.model.Employee.projects#10]
2019-05-30 10:10:31,617 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] select projects0_.employee_id as employee1_1_0_, projects0_.project_id as project_2_1_0_, project1_.project_id as project_1_2_1_, project1_.project_description as project_2_2_1_, project1_.project_name as project_3_2_1_ from employee_project projects0_ inner join project project1_ on projects0_.project_id=project1_.project_id where projects0_.employee_id=?
2019-05-30 10:10:31,618 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [INTEGER] - [10]
2019-05-30 10:10:31,619 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([project_1_2_1_] : [INTEGER]) - [9]
2019-05-30 10:10:31,620 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([project_2_2_1_] : [VARCHAR]) - [Project 1 Details]
2019-05-30 10:10:31,620 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([project_3_2_1_] : [VARCHAR]) - [Project 1]
2019-05-30 10:10:31,629 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([employee1_1_0_] : [INTEGER]) - [10]
2019-05-30 10:10:31,629 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([project_2_1_0_] : [INTEGER]) - [9]
2019-05-30 10:10:31,630 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-2] Created collection wrapper: [com.manytomany.model.Project.employees#9]
2019-05-30 10:10:31,632 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] delete from employee_project where employee_id=?
2019-05-30 10:10:31,633 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [INTEGER] - [10]
2019-05-30 10:10:31,635 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] delete from project where project_id=?
2019-05-30 10:10:31,636 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [INTEGER] - [9]
2019-05-30 10:10:31,678 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-2] SQL Error: 1451, SQLState: 23000
2019-05-30 10:10:31,678 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-2] Cannot delete or update a parent row: a foreign key constraint fails (`employeeDB`.`employee_project`, CONSTRAINT `FK4yddvnm7283a40plkcti66wv9` FOREIGN KEY (`project_id`) REFERENCES `project` (`project_id`))
2019-05-30 10:10:31,679 INFO org.hibernate.engine.jdbc.batch.internal.AbstractBatchImpl [http-nio-8080-exec-2] HHH000010: On release of batch it still contained JDBC statements
2019-05-30 10:10:31,679 ERROR org.hibernate.internal.ExceptionMapperStandardImpl [http-nio-8080-exec-2] HHH000346: Error during managed flush [org.hibernate.exception.ConstraintViolationException: could not execute statement]
2019-05-30 10:12:05,166 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [Thread-9] Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5a8b10e8] for TypeConfiguration
2019-05-30 10:12:05,166 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [Thread-9] Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@50a5df1c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5a8b10e8]
2019-05-30 10:12:05,199 INFO com.zaxxer.hikari.HikariDataSource [Thread-9] HikariPool-1 - Shutdown initiated...
2019-05-30 10:12:05,284 INFO com.zaxxer.hikari.HikariDataSource [Thread-9] HikariPool-1 - Shutdown completed.
2019-05-30 10:16:17,736 INFO com.manytomany.ManyToManyApplication [restartedMain] Starting ManyToManyApplication on Cgt-Jod-Lin-Adityam with PID 4944 (/home/cgt_jod_lin_kanhavm/eclipse-workspace/ManyToMany/target/classes started by cgt_jod_lin_kanhavm in /home/cgt_jod_lin_kanhavm/eclipse-workspace/ManyToMany)
2019-05-30 10:16:17,751 INFO com.manytomany.ManyToManyApplication [restartedMain] No active profile set, falling back to default profiles: default
2019-05-30 10:16:23,586 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2019-05-30 10:16:23,587 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.19]
2019-05-30 10:16:23,863 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2019-05-30 10:16:24,641 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2019-05-30 10:16:25,354 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2019-05-30 10:16:25,612 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2019-05-30 10:16:25,919 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate Core {5.3.10.Final}
2019-05-30 10:16:25,924 INFO org.hibernate.cfg.Environment [restartedMain] HHH000206: hibernate.properties not found
2019-05-30 10:16:26,453 INFO org.hibernate.annotations.common.Version [restartedMain] HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2019-05-30 10:16:26,501 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration boolean -> org.hibernate.type.BooleanType@7f85e81a
2019-05-30 10:16:26,502 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration boolean -> org.hibernate.type.BooleanType@7f85e81a
2019-05-30 10:16:26,502 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7f85e81a
2019-05-30 10:16:26,503 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@606e5269
2019-05-30 10:16:26,504 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration true_false -> org.hibernate.type.TrueFalseType@620b39da
2019-05-30 10:16:26,505 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration yes_no -> org.hibernate.type.YesNoType@4fb53d45
2019-05-30 10:16:26,506 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration byte -> org.hibernate.type.ByteType@30b58da6
2019-05-30 10:16:26,507 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration byte -> org.hibernate.type.ByteType@30b58da6
2019-05-30 10:16:26,507 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@30b58da6
2019-05-30 10:16:26,510 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration character -> org.hibernate.type.CharacterType@3d1cc233
2019-05-30 10:16:26,512 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration char -> org.hibernate.type.CharacterType@3d1cc233
2019-05-30 10:16:26,512 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3d1cc233
2019-05-30 10:16:26,514 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration short -> org.hibernate.type.ShortType@472f3360
2019-05-30 10:16:26,514 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration short -> org.hibernate.type.ShortType@472f3360
2019-05-30 10:16:26,514 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@472f3360
2019-05-30 10:16:26,519 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration integer -> org.hibernate.type.IntegerType@3661a064
2019-05-30 10:16:26,521 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration int -> org.hibernate.type.IntegerType@3661a064
2019-05-30 10:16:26,523 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3661a064
2019-05-30 10:16:26,525 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration long -> org.hibernate.type.LongType@37ca8e03
2019-05-30 10:16:26,525 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration long -> org.hibernate.type.LongType@37ca8e03
2019-05-30 10:16:26,525 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Long -> org.hibernate.type.LongType@37ca8e03
2019-05-30 10:16:26,527 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration float -> org.hibernate.type.FloatType@198ebd4c
2019-05-30 10:16:26,527 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration float -> org.hibernate.type.FloatType@198ebd4c
2019-05-30 10:16:26,528 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@198ebd4c
2019-05-30 10:16:26,532 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration double -> org.hibernate.type.DoubleType@286c6b4
2019-05-30 10:16:26,532 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration double -> org.hibernate.type.DoubleType@286c6b4
2019-05-30 10:16:26,532 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@286c6b4
2019-05-30 10:16:26,533 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@136d7372
2019-05-30 10:16:26,533 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@136d7372
2019-05-30 10:16:26,535 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4999ddf6
2019-05-30 10:16:26,535 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4999ddf6
2019-05-30 10:16:26,536 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration string -> org.hibernate.type.StringType@38541ab8
2019-05-30 10:16:26,536 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.String -> org.hibernate.type.StringType@38541ab8
2019-05-30 10:16:26,537 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5e40351f
2019-05-30 10:16:26,538 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7d411aac
2019-05-30 10:16:26,539 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration url -> org.hibernate.type.UrlType@23b8b6a0
2019-05-30 10:16:26,540 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.net.URL -> org.hibernate.type.UrlType@23b8b6a0
2019-05-30 10:16:26,541 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Duration -> org.hibernate.type.DurationType@66b0bbc8
2019-05-30 10:16:26,542 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@66b0bbc8
2019-05-30 10:16:26,543 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Instant -> org.hibernate.type.InstantType@6b558d11
2019-05-30 10:16:26,544 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6b558d11
2019-05-30 10:16:26,548 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3b9ef39
2019-05-30 10:16:26,550 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3b9ef39
2019-05-30 10:16:26,561 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@48cda13b
2019-05-30 10:16:26,561 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@48cda13b
2019-05-30 10:16:26,563 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@766f9e31
2019-05-30 10:16:26,564 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@766f9e31
2019-05-30 10:16:26,567 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4ef58621
2019-05-30 10:16:26,568 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4ef58621
2019-05-30 10:16:26,571 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@38454114
2019-05-30 10:16:26,571 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@38454114
2019-05-30 10:16:26,577 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5b1d9cb3
2019-05-30 10:16:26,578 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5b1d9cb3
2019-05-30 10:16:26,584 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration date -> org.hibernate.type.DateType@2d8ed5e3
2019-05-30 10:16:26,585 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d8ed5e3
2019-05-30 10:16:26,588 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration time -> org.hibernate.type.TimeType@2bed9be2
2019-05-30 10:16:26,588 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2bed9be2
2019-05-30 10:16:26,592 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration timestamp -> org.hibernate.type.TimestampType@1cd8838
2019-05-30 10:16:26,592 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1cd8838
2019-05-30 10:16:26,592 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1cd8838
2019-05-30 10:16:26,599 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@543beec4
2019-05-30 10:16:26,603 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration calendar -> org.hibernate.type.CalendarType@7282875c
2019-05-30 10:16:26,603 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7282875c
2019-05-30 10:16:26,603 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7282875c
2019-05-30 10:16:26,604 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@63e710a7
2019-05-30 10:16:26,606 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration locale -> org.hibernate.type.LocaleType@5ff467f8
2019-05-30 10:16:26,607 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5ff467f8
2019-05-30 10:16:26,609 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration currency -> org.hibernate.type.CurrencyType@63dc0504
2019-05-30 10:16:26,609 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@63dc0504
2019-05-30 10:16:26,611 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration timezone -> org.hibernate.type.TimeZoneType@48b6c630
2019-05-30 10:16:26,612 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@48b6c630
2019-05-30 10:16:26,613 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration class -> org.hibernate.type.ClassType@f0c1bce
2019-05-30 10:16:26,613 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f0c1bce
2019-05-30 10:16:26,613 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@568480da
2019-05-30 10:16:26,614 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@568480da
2019-05-30 10:16:26,614 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2272ec6f
2019-05-30 10:16:26,615 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration binary -> org.hibernate.type.BinaryType@74e5139e
2019-05-30 10:16:26,615 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration byte[] -> org.hibernate.type.BinaryType@74e5139e
2019-05-30 10:16:26,615 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [B -> org.hibernate.type.BinaryType@74e5139e
2019-05-30 10:16:26,616 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@656bd689
2019-05-30 10:16:26,616 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@656bd689
2019-05-30 10:16:26,616 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@656bd689
2019-05-30 10:16:26,617 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration row_version -> org.hibernate.type.RowVersionType@20264c89
2019-05-30 10:16:26,617 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration image -> org.hibernate.type.ImageType@587cbd25
2019-05-30 10:16:26,618 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration characters -> org.hibernate.type.CharArrayType@33673d11
2019-05-30 10:16:26,618 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration char[] -> org.hibernate.type.CharArrayType@33673d11
2019-05-30 10:16:26,618 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [C -> org.hibernate.type.CharArrayType@33673d11
2019-05-30 10:16:26,619 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@186a425f
2019-05-30 10:16:26,619 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@186a425f
2019-05-30 10:16:26,619 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@186a425f
2019-05-30 10:16:26,620 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration text -> org.hibernate.type.TextType@2fd6e37e
2019-05-30 10:16:26,620 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration ntext -> org.hibernate.type.NTextType@41c406d7
2019-05-30 10:16:26,623 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration blob -> org.hibernate.type.BlobType@156c07ba
2019-05-30 10:16:26,624 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@156c07ba
2019-05-30 10:16:26,624 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7662961
2019-05-30 10:16:26,626 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration clob -> org.hibernate.type.ClobType@2cc33219
2019-05-30 10:16:26,628 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2cc33219
2019-05-30 10:16:26,637 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration nclob -> org.hibernate.type.NClobType@7d8545f4
2019-05-30 10:16:26,637 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7d8545f4
2019-05-30 10:16:26,637 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7e303e7a
2019-05-30 10:16:26,638 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7587bb1b
2019-05-30 10:16:26,642 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration serializable -> org.hibernate.type.SerializableType@57139667
2019-05-30 10:16:26,646 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration object -> org.hibernate.type.ObjectType@42ef1b8
2019-05-30 10:16:26,647 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@42ef1b8
2019-05-30 10:16:26,647 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12246898
2019-05-30 10:16:26,648 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6174e855
2019-05-30 10:16:26,648 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@dbb4fa4
2019-05-30 10:16:26,648 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@50b34472
2019-05-30 10:16:26,648 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@61628654
2019-05-30 10:16:26,648 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2792ec6d
2019-05-30 10:16:26,648 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@70034154
2019-05-30 10:16:26,648 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3a590bf2
2019-05-30 10:16:26,842 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2019-05-30 10:16:26,948 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [restartedMain] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5fe29bbc] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@42c34cf6]
2019-05-30 10:16:27,677 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [restartedMain] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5fe29bbc] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7b7ec671]
2019-05-30 10:16:28,798 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [restartedMain] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7b7ec671] for TypeConfiguration
2019-05-30 10:16:31,079 INFO com.manytomany.ManyToManyApplication [restartedMain] Started ManyToManyApplication in 15.125 seconds (JVM running for 16.977)
2019-05-30 10:16:54,867 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-05-30 10:16:55,175 DEBUG org.hibernate.SQL [http-nio-8080-exec-1] select project0_.project_id as project_1_2_0_, project0_.project_description as project_2_2_0_, project0_.project_name as project_3_2_0_ from project project0_ where project0_.project_id=?
2019-05-30 10:16:55,238 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [INTEGER] - [9]
2019-05-30 10:16:55,568 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([project_2_2_0_] : [VARCHAR]) - [Project 1 Details]
2019-05-30 10:16:55,568 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([project_3_2_0_] : [VARCHAR]) - [Project 1]
2019-05-30 10:16:55,581 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-1] Created collection wrapper: [com.manytomany.model.Project.employees#9]
2019-05-30 10:16:55,755 DEBUG org.hibernate.SQL [http-nio-8080-exec-1] select employees0_.project_id as project_2_1_0_, employees0_.employee_id as employee1_1_0_, employee1_.employee_id as employee1_0_1_, employee1_.emp_age as emp_age2_0_1_, employee1_.emp_name as emp_name3_0_1_ from employee_project employees0_ inner join employee employee1_ on employees0_.employee_id=employee1_.employee_id where employees0_.project_id=?
2019-05-30 10:16:55,756 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [INTEGER] - [9]
2019-05-30 10:16:55,764 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([employee1_0_1_] : [INTEGER]) - [10]
2019-05-30 10:16:55,766 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([emp_age2_0_1_] : [INTEGER]) - [26]
2019-05-30 10:16:55,776 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([emp_name3_0_1_] : [VARCHAR]) - [Mickey]
2019-05-30 10:16:55,776 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([project_2_1_0_] : [INTEGER]) - [9]
2019-05-30 10:16:55,778 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([employee1_1_0_] : [INTEGER]) - [10]
2019-05-30 10:16:55,779 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([employee1_0_1_] : [INTEGER]) - [11]
2019-05-30 10:16:55,779 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([emp_age2_0_1_] : [INTEGER]) - [26]
2019-05-30 10:16:55,779 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([emp_name3_0_1_] : [VARCHAR]) - [Rock]
2019-05-30 10:16:55,779 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([project_2_1_0_] : [INTEGER]) - [9]
2019-05-30 10:16:55,780 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([employee1_1_0_] : [INTEGER]) - [11]
2019-05-30 10:16:55,780 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-1] Created collection wrapper: [com.manytomany.model.Employee.projects#10]
2019-05-30 10:16:55,780 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-1] Created collection wrapper: [com.manytomany.model.Employee.projects#11]
2019-05-30 10:16:55,783 DEBUG org.hibernate.SQL [http-nio-8080-exec-1] select projects0_.employee_id as employee1_1_0_, projects0_.project_id as project_2_1_0_, project1_.project_id as project_1_2_1_, project1_.project_description as project_2_2_1_, project1_.project_name as project_3_2_1_ from employee_project projects0_ inner join project project1_ on projects0_.project_id=project1_.project_id where projects0_.employee_id=?
2019-05-30 10:16:55,784 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [INTEGER] - [10]
2019-05-30 10:16:55,785 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([project_1_2_1_] : [INTEGER]) - [9]
2019-05-30 10:16:55,786 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([employee1_1_0_] : [INTEGER]) - [10]
2019-05-30 10:16:55,786 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([project_2_1_0_] : [INTEGER]) - [9]
2019-05-30 10:16:55,895 ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-8080-exec-1] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Project["employees"]->org.hibernate.collection.internal.PersistentBag[0]->com.manytomany.model.Employee["projects"])] with root cause
java.lang.StackOverflowError: null
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:763)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:468)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:74)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:369)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:363)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:362)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:737)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
2019-05-30 10:17:42,440 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [Thread-5] Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7b7ec671] for TypeConfiguration
2019-05-30 10:17:42,441 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [Thread-5] Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4addab5b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7b7ec671]
2019-05-30 10:17:42,445 INFO com.zaxxer.hikari.HikariDataSource [Thread-5] HikariPool-1 - Shutdown initiated...
2019-05-30 10:17:42,502 INFO com.zaxxer.hikari.HikariDataSource [Thread-5] HikariPool-1 - Shutdown completed.
2019-05-30 10:17:42,939 INFO com.manytomany.ManyToManyApplication [restartedMain] Starting ManyToManyApplication on Cgt-Jod-Lin-Adityam with PID 4944 (/home/cgt_jod_lin_kanhavm/eclipse-workspace/ManyToMany/target/classes started by cgt_jod_lin_kanhavm in /home/cgt_jod_lin_kanhavm/eclipse-workspace/ManyToMany)
2019-05-30 10:17:42,940 INFO com.manytomany.ManyToManyApplication [restartedMain] No active profile set, falling back to default profiles: default
2019-05-30 10:17:43,860 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2019-05-30 10:17:43,865 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.19]
2019-05-30 10:17:43,873 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2019-05-30 10:17:44,010 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-2 - Starting...
2019-05-30 10:17:44,103 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-2 - Start completed.
2019-05-30 10:17:44,110 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2019-05-30 10:17:44,127 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration boolean -> org.hibernate.type.BooleanType@7f85e81a
2019-05-30 10:17:44,130 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration boolean -> org.hibernate.type.BooleanType@7f85e81a
2019-05-30 10:17:44,132 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7f85e81a
2019-05-30 10:17:44,134 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@606e5269
2019-05-30 10:17:44,134 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration true_false -> org.hibernate.type.TrueFalseType@620b39da
2019-05-30 10:17:44,134 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration yes_no -> org.hibernate.type.YesNoType@4fb53d45
2019-05-30 10:17:44,135 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration byte -> org.hibernate.type.ByteType@30b58da6
2019-05-30 10:17:44,135 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration byte -> org.hibernate.type.ByteType@30b58da6
2019-05-30 10:17:44,135 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@30b58da6
2019-05-30 10:17:44,135 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration character -> org.hibernate.type.CharacterType@3d1cc233
2019-05-30 10:17:44,135 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration char -> org.hibernate.type.CharacterType@3d1cc233
2019-05-30 10:17:44,135 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3d1cc233
2019-05-30 10:17:44,135 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration short -> org.hibernate.type.ShortType@472f3360
2019-05-30 10:17:44,135 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration short -> org.hibernate.type.ShortType@472f3360
2019-05-30 10:17:44,136 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@472f3360
2019-05-30 10:17:44,136 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration integer -> org.hibernate.type.IntegerType@3661a064
2019-05-30 10:17:44,136 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration int -> org.hibernate.type.IntegerType@3661a064
2019-05-30 10:17:44,136 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3661a064
2019-05-30 10:17:44,136 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration long -> org.hibernate.type.LongType@37ca8e03
2019-05-30 10:17:44,136 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration long -> org.hibernate.type.LongType@37ca8e03
2019-05-30 10:17:44,136 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Long -> org.hibernate.type.LongType@37ca8e03
2019-05-30 10:17:44,136 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration float -> org.hibernate.type.FloatType@198ebd4c
2019-05-30 10:17:44,136 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration float -> org.hibernate.type.FloatType@198ebd4c
2019-05-30 10:17:44,136 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@198ebd4c
2019-05-30 10:17:44,136 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration double -> org.hibernate.type.DoubleType@286c6b4
2019-05-30 10:17:44,136 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration double -> org.hibernate.type.DoubleType@286c6b4
2019-05-30 10:17:44,137 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@286c6b4
2019-05-30 10:17:44,137 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@136d7372
2019-05-30 10:17:44,137 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@136d7372
2019-05-30 10:17:44,137 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4999ddf6
2019-05-30 10:17:44,137 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4999ddf6
2019-05-30 10:17:44,137 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration string -> org.hibernate.type.StringType@38541ab8
2019-05-30 10:17:44,137 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.String -> org.hibernate.type.StringType@38541ab8
2019-05-30 10:17:44,137 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5e40351f
2019-05-30 10:17:44,137 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7d411aac
2019-05-30 10:17:44,137 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration url -> org.hibernate.type.UrlType@23b8b6a0
2019-05-30 10:17:44,137 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.net.URL -> org.hibernate.type.UrlType@23b8b6a0
2019-05-30 10:17:44,137 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Duration -> org.hibernate.type.DurationType@66b0bbc8
2019-05-30 10:17:44,138 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@66b0bbc8
2019-05-30 10:17:44,138 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Instant -> org.hibernate.type.InstantType@6b558d11
2019-05-30 10:17:44,138 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6b558d11
2019-05-30 10:17:44,138 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3b9ef39
2019-05-30 10:17:44,138 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3b9ef39
2019-05-30 10:17:44,142 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@48cda13b
2019-05-30 10:17:44,142 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@48cda13b
2019-05-30 10:17:44,143 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@766f9e31
2019-05-30 10:17:44,143 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@766f9e31
2019-05-30 10:17:44,143 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4ef58621
2019-05-30 10:17:44,143 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4ef58621
2019-05-30 10:17:44,143 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@38454114
2019-05-30 10:17:44,143 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@38454114
2019-05-30 10:17:44,143 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5b1d9cb3
2019-05-30 10:17:44,147 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5b1d9cb3
2019-05-30 10:17:44,148 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration date -> org.hibernate.type.DateType@2d8ed5e3
2019-05-30 10:17:44,148 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d8ed5e3
2019-05-30 10:17:44,148 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration time -> org.hibernate.type.TimeType@2bed9be2
2019-05-30 10:17:44,148 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2bed9be2
2019-05-30 10:17:44,148 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration timestamp -> org.hibernate.type.TimestampType@1cd8838
2019-05-30 10:17:44,148 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1cd8838
2019-05-30 10:17:44,148 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1cd8838
2019-05-30 10:17:44,148 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@543beec4
2019-05-30 10:17:44,148 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration calendar -> org.hibernate.type.CalendarType@7282875c
2019-05-30 10:17:44,148 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7282875c
2019-05-30 10:17:44,148 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7282875c
2019-05-30 10:17:44,148 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@63e710a7
2019-05-30 10:17:44,148 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration locale -> org.hibernate.type.LocaleType@5ff467f8
2019-05-30 10:17:44,148 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5ff467f8
2019-05-30 10:17:44,149 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration currency -> org.hibernate.type.CurrencyType@63dc0504
2019-05-30 10:17:44,154 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@63dc0504
2019-05-30 10:17:44,155 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration timezone -> org.hibernate.type.TimeZoneType@48b6c630
2019-05-30 10:17:44,155 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@48b6c630
2019-05-30 10:17:44,155 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration class -> org.hibernate.type.ClassType@f0c1bce
2019-05-30 10:17:44,155 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f0c1bce
2019-05-30 10:17:44,156 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@568480da
2019-05-30 10:17:44,156 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@568480da
2019-05-30 10:17:44,156 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2272ec6f
2019-05-30 10:17:44,156 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration binary -> org.hibernate.type.BinaryType@74e5139e
2019-05-30 10:17:44,156 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration byte[] -> org.hibernate.type.BinaryType@74e5139e
2019-05-30 10:17:44,157 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [B -> org.hibernate.type.BinaryType@74e5139e
2019-05-30 10:17:44,157 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@656bd689
2019-05-30 10:17:44,157 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@656bd689
2019-05-30 10:17:44,157 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@656bd689
2019-05-30 10:17:44,157 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration row_version -> org.hibernate.type.RowVersionType@20264c89
2019-05-30 10:17:44,157 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration image -> org.hibernate.type.ImageType@587cbd25
2019-05-30 10:17:44,157 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration characters -> org.hibernate.type.CharArrayType@33673d11
2019-05-30 10:17:44,157 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration char[] -> org.hibernate.type.CharArrayType@33673d11
2019-05-30 10:17:44,157 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [C -> org.hibernate.type.CharArrayType@33673d11
2019-05-30 10:17:44,158 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@186a425f
2019-05-30 10:17:44,158 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@186a425f
2019-05-30 10:17:44,158 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@186a425f
2019-05-30 10:17:44,158 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration text -> org.hibernate.type.TextType@2fd6e37e
2019-05-30 10:17:44,158 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration ntext -> org.hibernate.type.NTextType@41c406d7
2019-05-30 10:17:44,158 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration blob -> org.hibernate.type.BlobType@156c07ba
2019-05-30 10:17:44,159 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@156c07ba
2019-05-30 10:17:44,159 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7662961
2019-05-30 10:17:44,159 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration clob -> org.hibernate.type.ClobType@2cc33219
2019-05-30 10:17:44,159 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2cc33219
2019-05-30 10:17:44,159 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration nclob -> org.hibernate.type.NClobType@7d8545f4
2019-05-30 10:17:44,159 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7d8545f4
2019-05-30 10:17:44,159 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7e303e7a
2019-05-30 10:17:44,159 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7587bb1b
2019-05-30 10:17:44,159 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration serializable -> org.hibernate.type.SerializableType@57139667
2019-05-30 10:17:44,160 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration object -> org.hibernate.type.ObjectType@42ef1b8
2019-05-30 10:17:44,160 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@42ef1b8
2019-05-30 10:17:44,160 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@52284773
2019-05-30 10:17:44,160 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1ace1179
2019-05-30 10:17:44,160 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6c199599
2019-05-30 10:17:44,160 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@68f2e0bb
2019-05-30 10:17:44,160 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@78f13109
2019-05-30 10:17:44,160 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@12deb2b7
2019-05-30 10:17:44,161 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@324b4828
2019-05-30 10:17:44,164 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4dc391e2
2019-05-30 10:17:44,175 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2019-05-30 10:17:44,189 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [restartedMain] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1a070cf] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1b35d238]
2019-05-30 10:17:44,306 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [restartedMain] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1a070cf] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5e3dd4d0]
2019-05-30 10:17:44,513 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [restartedMain] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5e3dd4d0] for TypeConfiguration
2019-05-30 10:17:45,115 INFO com.manytomany.ManyToManyApplication [restartedMain] Started ManyToManyApplication in 2.244 seconds (JVM running for 91.013)
2019-05-30 10:17:49,349 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-05-30 10:17:49,412 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] select project0_.project_id as project_1_2_0_, project0_.project_description as project_2_2_0_, project0_.project_name as project_3_2_0_ from project project0_ where project0_.project_id=?
2019-05-30 10:17:49,412 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [INTEGER] - [9]
2019-05-30 10:17:49,417 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([project_2_2_0_] : [VARCHAR]) - [Project 1 Details]
2019-05-30 10:17:49,418 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([project_3_2_0_] : [VARCHAR]) - [Project 1]
2019-05-30 10:17:49,418 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-2] Created collection wrapper: [com.manytomany.model.Project.employees#9]
2019-05-30 10:17:49,452 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] select employees0_.project_id as project_2_1_0_, employees0_.employee_id as employee1_1_0_, employee1_.employee_id as employee1_0_1_, employee1_.emp_age as emp_age2_0_1_, employee1_.emp_name as emp_name3_0_1_ from employee_project employees0_ inner join employee employee1_ on employees0_.employee_id=employee1_.employee_id where employees0_.project_id=?
2019-05-30 10:17:49,455 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [INTEGER] - [9]
2019-05-30 10:17:49,467 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([employee1_0_1_] : [INTEGER]) - [10]
2019-05-30 10:17:49,469 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([emp_age2_0_1_] : [INTEGER]) - [26]
2019-05-30 10:17:49,471 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([emp_name3_0_1_] : [VARCHAR]) - [Mickey]
2019-05-30 10:17:49,472 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([project_2_1_0_] : [INTEGER]) - [9]
2019-05-30 10:17:49,472 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([employee1_1_0_] : [INTEGER]) - [10]
2019-05-30 10:17:49,472 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([employee1_0_1_] : [INTEGER]) - [11]
2019-05-30 10:17:49,473 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([emp_age2_0_1_] : [INTEGER]) - [26]
2019-05-30 10:17:49,473 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([emp_name3_0_1_] : [VARCHAR]) - [Rock]
2019-05-30 10:17:49,473 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([project_2_1_0_] : [INTEGER]) - [9]
2019-05-30 10:17:49,473 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([employee1_1_0_] : [INTEGER]) - [11]
2019-05-30 10:17:49,473 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-2] Created collection wrapper: [com.manytomany.model.Employee.projects#10]
2019-05-30 10:17:49,473 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-2] Created collection wrapper: [com.manytomany.model.Employee.projects#11]
2019-05-30 10:19:08,425 DEBUG org.hibernate.SQL [http-nio-8080-exec-5] select employee0_.employee_id as employee1_0_0_, employee0_.emp_age as emp_age2_0_0_, employee0_.emp_name as emp_name3_0_0_ from employee employee0_ where employee0_.employee_id=?
2019-05-30 10:19:08,427 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [INTEGER] - [10]
2019-05-30 10:19:08,435 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([emp_age2_0_0_] : [INTEGER]) - [26]
2019-05-30 10:19:08,436 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([emp_name3_0_0_] : [VARCHAR]) - [Mickey]
2019-05-30 10:19:08,439 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-5] Created collection wrapper: [com.manytomany.model.Employee.projects#10]
2019-05-30 10:19:08,479 DEBUG org.hibernate.SQL [http-nio-8080-exec-5] select projects0_.employee_id as employee1_1_0_, projects0_.project_id as project_2_1_0_, project1_.project_id as project_1_2_1_, project1_.project_description as project_2_2_1_, project1_.project_name as project_3_2_1_ from employee_project projects0_ inner join project project1_ on projects0_.project_id=project1_.project_id where projects0_.employee_id=?
2019-05-30 10:19:08,480 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [INTEGER] - [10]
2019-05-30 10:19:08,497 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([project_1_2_1_] : [INTEGER]) - [9]
2019-05-30 10:19:08,502 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([project_2_2_1_] : [VARCHAR]) - [Project 1 Details]
2019-05-30 10:19:08,503 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([project_3_2_1_] : [VARCHAR]) - [Project 1]
2019-05-30 10:19:08,503 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([employee1_1_0_] : [INTEGER]) - [10]
2019-05-30 10:19:08,503 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([project_2_1_0_] : [INTEGER]) - [9]
2019-05-30 10:19:08,510 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-5] Created collection wrapper: [com.manytomany.model.Project.employees#9]
2019-05-30 10:19:08,585 DEBUG org.hibernate.SQL [http-nio-8080-exec-5] delete from employee_project where employee_id=?
2019-05-30 10:19:08,586 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [INTEGER] - [10]
2019-05-30 10:19:08,842 DEBUG org.hibernate.SQL [http-nio-8080-exec-5] delete from project where project_id=?
2019-05-30 10:19:08,851 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [INTEGER] - [9]
2019-05-30 10:19:09,352 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-5] SQL Error: 1451, SQLState: 23000
2019-05-30 10:19:09,353 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-5] Cannot delete or update a parent row: a foreign key constraint fails (`employeeDB`.`employee_project`, CONSTRAINT `FK4yddvnm7283a40plkcti66wv9` FOREIGN KEY (`project_id`) REFERENCES `project` (`project_id`))
2019-05-30 10:19:09,362 INFO org.hibernate.engine.jdbc.batch.internal.AbstractBatchImpl [http-nio-8080-exec-5] HHH000010: On release of batch it still contained JDBC statements
2019-05-30 10:19:09,366 ERROR org.hibernate.internal.ExceptionMapperStandardImpl [http-nio-8080-exec-5] HHH000346: Error during managed flush [org.hibernate.exception.ConstraintViolationException: could not execute statement]
2019-05-30 10:20:15,682 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [Thread-10] Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5e3dd4d0] for TypeConfiguration
2019-05-30 10:20:15,685 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [Thread-10] Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6c4f4ab5] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5e3dd4d0]
2019-05-30 10:20:15,688 INFO com.zaxxer.hikari.HikariDataSource [Thread-10] HikariPool-2 - Shutdown initiated...
2019-05-30 10:20:15,702 INFO com.zaxxer.hikari.HikariDataSource [Thread-10] HikariPool-2 - Shutdown completed.
2019-05-30 10:20:15,977 INFO com.manytomany.ManyToManyApplication [restartedMain] Starting ManyToManyApplication on Cgt-Jod-Lin-Adityam with PID 4944 (/home/cgt_jod_lin_kanhavm/eclipse-workspace/ManyToMany/target/classes started by cgt_jod_lin_kanhavm in /home/cgt_jod_lin_kanhavm/eclipse-workspace/ManyToMany)
2019-05-30 10:20:15,978 INFO com.manytomany.ManyToManyApplication [restartedMain] No active profile set, falling back to default profiles: default
2019-05-30 10:20:17,300 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2019-05-30 10:20:17,302 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.19]
2019-05-30 10:20:17,315 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2019-05-30 10:20:17,492 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-3 - Starting...
2019-05-30 10:20:17,587 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-3 - Start completed.
2019-05-30 10:20:17,619 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2019-05-30 10:20:17,643 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration boolean -> org.hibernate.type.BooleanType@7f85e81a
2019-05-30 10:20:17,643 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration boolean -> org.hibernate.type.BooleanType@7f85e81a
2019-05-30 10:20:17,643 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7f85e81a
2019-05-30 10:20:17,643 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@606e5269
2019-05-30 10:20:17,643 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration true_false -> org.hibernate.type.TrueFalseType@620b39da
2019-05-30 10:20:17,644 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration yes_no -> org.hibernate.type.YesNoType@4fb53d45
2019-05-30 10:20:17,644 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration byte -> org.hibernate.type.ByteType@30b58da6
2019-05-30 10:20:17,644 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration byte -> org.hibernate.type.ByteType@30b58da6
2019-05-30 10:20:17,644 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@30b58da6
2019-05-30 10:20:17,644 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration character -> org.hibernate.type.CharacterType@3d1cc233
2019-05-30 10:20:17,644 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration char -> org.hibernate.type.CharacterType@3d1cc233
2019-05-30 10:20:17,644 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3d1cc233
2019-05-30 10:20:17,645 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration short -> org.hibernate.type.ShortType@472f3360
2019-05-30 10:20:17,645 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration short -> org.hibernate.type.ShortType@472f3360
2019-05-30 10:20:17,646 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@472f3360
2019-05-30 10:20:17,646 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration integer -> org.hibernate.type.IntegerType@3661a064
2019-05-30 10:20:17,646 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration int -> org.hibernate.type.IntegerType@3661a064
2019-05-30 10:20:17,646 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3661a064
2019-05-30 10:20:17,647 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration long -> org.hibernate.type.LongType@37ca8e03
2019-05-30 10:20:17,647 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration long -> org.hibernate.type.LongType@37ca8e03
2019-05-30 10:20:17,647 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Long -> org.hibernate.type.LongType@37ca8e03
2019-05-30 10:20:17,647 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration float -> org.hibernate.type.FloatType@198ebd4c
2019-05-30 10:20:17,648 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration float -> org.hibernate.type.FloatType@198ebd4c
2019-05-30 10:20:17,648 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@198ebd4c
2019-05-30 10:20:17,648 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration double -> org.hibernate.type.DoubleType@286c6b4
2019-05-30 10:20:17,649 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration double -> org.hibernate.type.DoubleType@286c6b4
2019-05-30 10:20:17,649 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@286c6b4
2019-05-30 10:20:17,650 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@136d7372
2019-05-30 10:20:17,651 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@136d7372
2019-05-30 10:20:17,651 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4999ddf6
2019-05-30 10:20:17,652 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4999ddf6
2019-05-30 10:20:17,652 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration string -> org.hibernate.type.StringType@38541ab8
2019-05-30 10:20:17,653 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.String -> org.hibernate.type.StringType@38541ab8
2019-05-30 10:20:17,654 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5e40351f
2019-05-30 10:20:17,655 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7d411aac
2019-05-30 10:20:17,655 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration url -> org.hibernate.type.UrlType@23b8b6a0
2019-05-30 10:20:17,655 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.net.URL -> org.hibernate.type.UrlType@23b8b6a0
2019-05-30 10:20:17,655 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Duration -> org.hibernate.type.DurationType@66b0bbc8
2019-05-30 10:20:17,655 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@66b0bbc8
2019-05-30 10:20:17,662 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Instant -> org.hibernate.type.InstantType@6b558d11
2019-05-30 10:20:17,662 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6b558d11
2019-05-30 10:20:17,662 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3b9ef39
2019-05-30 10:20:17,662 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3b9ef39
2019-05-30 10:20:17,662 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@48cda13b
2019-05-30 10:20:17,663 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@48cda13b
2019-05-30 10:20:17,667 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@766f9e31
2019-05-30 10:20:17,667 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@766f9e31
2019-05-30 10:20:17,668 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4ef58621
2019-05-30 10:20:17,668 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4ef58621
2019-05-30 10:20:17,668 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@38454114
2019-05-30 10:20:17,668 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@38454114
2019-05-30 10:20:17,668 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5b1d9cb3
2019-05-30 10:20:17,668 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5b1d9cb3
2019-05-30 10:20:17,668 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration date -> org.hibernate.type.DateType@2d8ed5e3
2019-05-30 10:20:17,668 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d8ed5e3
2019-05-30 10:20:17,668 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration time -> org.hibernate.type.TimeType@2bed9be2
2019-05-30 10:20:17,668 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2bed9be2
2019-05-30 10:20:17,669 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration timestamp -> org.hibernate.type.TimestampType@1cd8838
2019-05-30 10:20:17,669 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1cd8838
2019-05-30 10:20:17,669 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1cd8838
2019-05-30 10:20:17,669 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@543beec4
2019-05-30 10:20:17,669 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration calendar -> org.hibernate.type.CalendarType@7282875c
2019-05-30 10:20:17,669 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7282875c
2019-05-30 10:20:17,669 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7282875c
2019-05-30 10:20:17,669 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@63e710a7
2019-05-30 10:20:17,669 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration locale -> org.hibernate.type.LocaleType@5ff467f8
2019-05-30 10:20:17,669 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5ff467f8
2019-05-30 10:20:17,669 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration currency -> org.hibernate.type.CurrencyType@63dc0504
2019-05-30 10:20:17,669 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@63dc0504
2019-05-30 10:20:17,669 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration timezone -> org.hibernate.type.TimeZoneType@48b6c630
2019-05-30 10:20:17,669 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@48b6c630
2019-05-30 10:20:17,669 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration class -> org.hibernate.type.ClassType@f0c1bce
2019-05-30 10:20:17,669 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f0c1bce
2019-05-30 10:20:17,669 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@568480da
2019-05-30 10:20:17,669 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@568480da
2019-05-30 10:20:17,669 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2272ec6f
2019-05-30 10:20:17,669 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration binary -> org.hibernate.type.BinaryType@74e5139e
2019-05-30 10:20:17,669 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration byte[] -> org.hibernate.type.BinaryType@74e5139e
2019-05-30 10:20:17,669 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [B -> org.hibernate.type.BinaryType@74e5139e
2019-05-30 10:20:17,670 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@656bd689
2019-05-30 10:20:17,670 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@656bd689
2019-05-30 10:20:17,670 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@656bd689
2019-05-30 10:20:17,670 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration row_version -> org.hibernate.type.RowVersionType@20264c89
2019-05-30 10:20:17,670 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration image -> org.hibernate.type.ImageType@587cbd25
2019-05-30 10:20:17,670 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration characters -> org.hibernate.type.CharArrayType@33673d11
2019-05-30 10:20:17,670 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration char[] -> org.hibernate.type.CharArrayType@33673d11
2019-05-30 10:20:17,670 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [C -> org.hibernate.type.CharArrayType@33673d11
2019-05-30 10:20:17,670 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@186a425f
2019-05-30 10:20:17,670 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@186a425f
2019-05-30 10:20:17,670 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@186a425f
2019-05-30 10:20:17,670 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration text -> org.hibernate.type.TextType@2fd6e37e
2019-05-30 10:20:17,670 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration ntext -> org.hibernate.type.NTextType@41c406d7
2019-05-30 10:20:17,670 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration blob -> org.hibernate.type.BlobType@156c07ba
2019-05-30 10:20:17,670 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@156c07ba
2019-05-30 10:20:17,670 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7662961
2019-05-30 10:20:17,670 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration clob -> org.hibernate.type.ClobType@2cc33219
2019-05-30 10:20:17,670 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2cc33219
2019-05-30 10:20:17,670 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration nclob -> org.hibernate.type.NClobType@7d8545f4
2019-05-30 10:20:17,670 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7d8545f4
2019-05-30 10:20:17,670 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7e303e7a
2019-05-30 10:20:17,670 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7587bb1b
2019-05-30 10:20:17,670 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration serializable -> org.hibernate.type.SerializableType@57139667
2019-05-30 10:20:17,670 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration object -> org.hibernate.type.ObjectType@42ef1b8
2019-05-30 10:20:17,670 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@42ef1b8
2019-05-30 10:20:17,671 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@75555a6a
2019-05-30 10:20:17,671 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@dcf1b6e
2019-05-30 10:20:17,671 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@8d046d9
2019-05-30 10:20:17,671 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@64e59214
2019-05-30 10:20:17,671 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3b3c02e8
2019-05-30 10:20:17,671 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4e5d6a8a
2019-05-30 10:20:17,671 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@44311b16
2019-05-30 10:20:17,671 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@c8c54b6
2019-05-30 10:20:17,697 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2019-05-30 10:20:17,720 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [restartedMain] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@41ea5d15] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@709ef496]
2019-05-30 10:20:17,846 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [restartedMain] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@41ea5d15] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1bae5c58]
2019-05-30 10:20:18,143 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [restartedMain] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1bae5c58] for TypeConfiguration
2019-05-30 10:20:18,805 INFO com.manytomany.ManyToManyApplication [restartedMain] Started ManyToManyApplication in 2.886 seconds (JVM running for 244.704)
2019-05-30 10:20:25,590 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [Thread-16] Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1bae5c58] for TypeConfiguration
2019-05-30 10:20:25,593 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [Thread-16] Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2f2f29f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1bae5c58]
2019-05-30 10:20:25,597 INFO com.zaxxer.hikari.HikariDataSource [Thread-16] HikariPool-3 - Shutdown initiated...
2019-05-30 10:20:25,604 INFO com.zaxxer.hikari.HikariDataSource [Thread-16] HikariPool-3 - Shutdown completed.
2019-05-30 10:20:25,920 INFO com.manytomany.ManyToManyApplication [restartedMain] Starting ManyToManyApplication on Cgt-Jod-Lin-Adityam with PID 4944 (/home/cgt_jod_lin_kanhavm/eclipse-workspace/ManyToMany/target/classes started by cgt_jod_lin_kanhavm in /home/cgt_jod_lin_kanhavm/eclipse-workspace/ManyToMany)
2019-05-30 10:20:25,921 INFO com.manytomany.ManyToManyApplication [restartedMain] No active profile set, falling back to default profiles: default
2019-05-30 10:20:26,789 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2019-05-30 10:20:26,789 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.19]
2019-05-30 10:20:26,794 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2019-05-30 10:20:27,003 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-4 - Starting...
2019-05-30 10:20:27,058 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-4 - Start completed.
2019-05-30 10:20:27,065 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2019-05-30 10:20:27,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration boolean -> org.hibernate.type.BooleanType@7f85e81a
2019-05-30 10:20:27,083 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration boolean -> org.hibernate.type.BooleanType@7f85e81a
2019-05-30 10:20:27,083 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7f85e81a
2019-05-30 10:20:27,084 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@606e5269
2019-05-30 10:20:27,084 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration true_false -> org.hibernate.type.TrueFalseType@620b39da
2019-05-30 10:20:27,084 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration yes_no -> org.hibernate.type.YesNoType@4fb53d45
2019-05-30 10:20:27,084 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration byte -> org.hibernate.type.ByteType@30b58da6
2019-05-30 10:20:27,084 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration byte -> org.hibernate.type.ByteType@30b58da6
2019-05-30 10:20:27,085 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@30b58da6
2019-05-30 10:20:27,085 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration character -> org.hibernate.type.CharacterType@3d1cc233
2019-05-30 10:20:27,085 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration char -> org.hibernate.type.CharacterType@3d1cc233
2019-05-30 10:20:27,085 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3d1cc233
2019-05-30 10:20:27,085 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration short -> org.hibernate.type.ShortType@472f3360
2019-05-30 10:20:27,085 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration short -> org.hibernate.type.ShortType@472f3360
2019-05-30 10:20:27,085 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@472f3360
2019-05-30 10:20:27,086 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration integer -> org.hibernate.type.IntegerType@3661a064
2019-05-30 10:20:27,086 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration int -> org.hibernate.type.IntegerType@3661a064
2019-05-30 10:20:27,087 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3661a064
2019-05-30 10:20:27,087 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration long -> org.hibernate.type.LongType@37ca8e03
2019-05-30 10:20:27,087 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration long -> org.hibernate.type.LongType@37ca8e03
2019-05-30 10:20:27,091 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Long -> org.hibernate.type.LongType@37ca8e03
2019-05-30 10:20:27,091 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration float -> org.hibernate.type.FloatType@198ebd4c
2019-05-30 10:20:27,092 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration float -> org.hibernate.type.FloatType@198ebd4c
2019-05-30 10:20:27,092 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@198ebd4c
2019-05-30 10:20:27,092 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration double -> org.hibernate.type.DoubleType@286c6b4
2019-05-30 10:20:27,092 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration double -> org.hibernate.type.DoubleType@286c6b4
2019-05-30 10:20:27,092 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@286c6b4
2019-05-30 10:20:27,097 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@136d7372
2019-05-30 10:20:27,097 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@136d7372
2019-05-30 10:20:27,097 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4999ddf6
2019-05-30 10:20:27,098 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4999ddf6
2019-05-30 10:20:27,098 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration string -> org.hibernate.type.StringType@38541ab8
2019-05-30 10:20:27,098 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.String -> org.hibernate.type.StringType@38541ab8
2019-05-30 10:20:27,098 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5e40351f
2019-05-30 10:20:27,098 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7d411aac
2019-05-30 10:20:27,098 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration url -> org.hibernate.type.UrlType@23b8b6a0
2019-05-30 10:20:27,098 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.net.URL -> org.hibernate.type.UrlType@23b8b6a0
2019-05-30 10:20:27,098 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Duration -> org.hibernate.type.DurationType@66b0bbc8
2019-05-30 10:20:27,098 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@66b0bbc8
2019-05-30 10:20:27,098 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Instant -> org.hibernate.type.InstantType@6b558d11
2019-05-30 10:20:27,098 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6b558d11
2019-05-30 10:20:27,098 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3b9ef39
2019-05-30 10:20:27,099 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3b9ef39
2019-05-30 10:20:27,099 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@48cda13b
2019-05-30 10:20:27,099 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@48cda13b
2019-05-30 10:20:27,099 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@766f9e31
2019-05-30 10:20:27,099 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@766f9e31
2019-05-30 10:20:27,099 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4ef58621
2019-05-30 10:20:27,099 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4ef58621
2019-05-30 10:20:27,099 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@38454114
2019-05-30 10:20:27,099 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@38454114
2019-05-30 10:20:27,099 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5b1d9cb3
2019-05-30 10:20:27,099 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5b1d9cb3
2019-05-30 10:20:27,099 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration date -> org.hibernate.type.DateType@2d8ed5e3
2019-05-30 10:20:27,099 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d8ed5e3
2019-05-30 10:20:27,099 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration time -> org.hibernate.type.TimeType@2bed9be2
2019-05-30 10:20:27,099 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2bed9be2
2019-05-30 10:20:27,099 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration timestamp -> org.hibernate.type.TimestampType@1cd8838
2019-05-30 10:20:27,099 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1cd8838
2019-05-30 10:20:27,099 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1cd8838
2019-05-30 10:20:27,099 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@543beec4
2019-05-30 10:20:27,099 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration calendar -> org.hibernate.type.CalendarType@7282875c
2019-05-30 10:20:27,099 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7282875c
2019-05-30 10:20:27,099 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7282875c
2019-05-30 10:20:27,099 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@63e710a7
2019-05-30 10:20:27,099 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration locale -> org.hibernate.type.LocaleType@5ff467f8
2019-05-30 10:20:27,099 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5ff467f8
2019-05-30 10:20:27,099 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration currency -> org.hibernate.type.CurrencyType@63dc0504
2019-05-30 10:20:27,100 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@63dc0504
2019-05-30 10:20:27,100 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration timezone -> org.hibernate.type.TimeZoneType@48b6c630
2019-05-30 10:20:27,100 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@48b6c630
2019-05-30 10:20:27,100 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration class -> org.hibernate.type.ClassType@f0c1bce
2019-05-30 10:20:27,100 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f0c1bce
2019-05-30 10:20:27,100 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@568480da
2019-05-30 10:20:27,105 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@568480da
2019-05-30 10:20:27,106 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2272ec6f
2019-05-30 10:20:27,106 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration binary -> org.hibernate.type.BinaryType@74e5139e
2019-05-30 10:20:27,106 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration byte[] -> org.hibernate.type.BinaryType@74e5139e
2019-05-30 10:20:27,106 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [B -> org.hibernate.type.BinaryType@74e5139e
2019-05-30 10:20:27,106 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@656bd689
2019-05-30 10:20:27,106 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@656bd689
2019-05-30 10:20:27,106 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@656bd689
2019-05-30 10:20:27,106 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration row_version -> org.hibernate.type.RowVersionType@20264c89
2019-05-30 10:20:27,106 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration image -> org.hibernate.type.ImageType@587cbd25
2019-05-30 10:20:27,106 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration characters -> org.hibernate.type.CharArrayType@33673d11
2019-05-30 10:20:27,106 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration char[] -> org.hibernate.type.CharArrayType@33673d11
2019-05-30 10:20:27,106 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [C -> org.hibernate.type.CharArrayType@33673d11
2019-05-30 10:20:27,106 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@186a425f
2019-05-30 10:20:27,106 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@186a425f
2019-05-30 10:20:27,106 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@186a425f
2019-05-30 10:20:27,106 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration text -> org.hibernate.type.TextType@2fd6e37e
2019-05-30 10:20:27,106 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration ntext -> org.hibernate.type.NTextType@41c406d7
2019-05-30 10:20:27,106 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration blob -> org.hibernate.type.BlobType@156c07ba
2019-05-30 10:20:27,106 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@156c07ba
2019-05-30 10:20:27,106 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7662961
2019-05-30 10:20:27,106 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration clob -> org.hibernate.type.ClobType@2cc33219
2019-05-30 10:20:27,106 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2cc33219
2019-05-30 10:20:27,106 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration nclob -> org.hibernate.type.NClobType@7d8545f4
2019-05-30 10:20:27,106 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7d8545f4
2019-05-30 10:20:27,106 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7e303e7a
2019-05-30 10:20:27,106 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7587bb1b
2019-05-30 10:20:27,106 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration serializable -> org.hibernate.type.SerializableType@57139667
2019-05-30 10:20:27,106 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration object -> org.hibernate.type.ObjectType@42ef1b8
2019-05-30 10:20:27,107 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@42ef1b8
2019-05-30 10:20:27,107 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@449d9b16
2019-05-30 10:20:27,107 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@21dd9339
2019-05-30 10:20:27,107 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2d58eff0
2019-05-30 10:20:27,107 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7752509a
2019-05-30 10:20:27,107 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5fbf204d
2019-05-30 10:20:27,107 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@123634d8
2019-05-30 10:20:27,107 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@787b6e01
2019-05-30 10:20:27,107 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1dc82714
2019-05-30 10:20:27,128 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2019-05-30 10:20:27,145 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [restartedMain] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@48a43dd8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6159c7ba]
2019-05-30 10:20:27,227 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [restartedMain] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@48a43dd8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3378b89a]
2019-05-30 10:20:27,368 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [restartedMain] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3378b89a] for TypeConfiguration
2019-05-30 10:20:27,855 INFO com.manytomany.ManyToManyApplication [restartedMain] Started ManyToManyApplication in 2.001 seconds (JVM running for 253.753)
2019-05-30 10:20:36,171 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-05-30 10:20:36,222 DEBUG org.hibernate.SQL [http-nio-8080-exec-1] select project0_.project_id as project_1_2_0_, project0_.project_description as project_2_2_0_, project0_.project_name as project_3_2_0_ from project project0_ where project0_.project_id=?
2019-05-30 10:20:36,223 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-1] binding parameter [1] as [INTEGER] - [9]
2019-05-30 10:20:36,230 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([project_2_2_0_] : [VARCHAR]) - [Project 1 Details]
2019-05-30 10:20:36,232 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-1] extracted value ([project_3_2_0_] : [VARCHAR]) - [Project 1]
2019-05-30 10:20:36,232 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-1] Created collection wrapper: [com.manytomany.model.Project.employees#9]
2019-05-30 10:21:28,203 DEBUG org.hibernate.SQL [http-nio-8080-exec-3] select employee0_.employee_id as employee1_0_0_, employee0_.emp_age as emp_age2_0_0_, employee0_.emp_name as emp_name3_0_0_ from employee employee0_ where employee0_.employee_id=?
2019-05-30 10:21:28,203 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [INTEGER] - [10]
2019-05-30 10:21:28,206 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([emp_age2_0_0_] : [INTEGER]) - [26]
2019-05-30 10:21:28,207 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([emp_name3_0_0_] : [VARCHAR]) - [Mickey]
2019-05-30 10:21:28,207 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-3] Created collection wrapper: [com.manytomany.model.Employee.projects#10]
2019-05-30 10:21:28,232 DEBUG org.hibernate.SQL [http-nio-8080-exec-3] select projects0_.employee_id as employee1_1_0_, projects0_.project_id as project_2_1_0_, project1_.project_id as project_1_2_1_, project1_.project_description as project_2_2_1_, project1_.project_name as project_3_2_1_ from employee_project projects0_ inner join project project1_ on projects0_.project_id=project1_.project_id where projects0_.employee_id=?
2019-05-30 10:21:28,232 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [INTEGER] - [10]
2019-05-30 10:21:28,233 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([project_1_2_1_] : [INTEGER]) - [9]
2019-05-30 10:21:28,234 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([project_2_2_1_] : [VARCHAR]) - [Project 1 Details]
2019-05-30 10:21:28,234 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([project_3_2_1_] : [VARCHAR]) - [Project 1]
2019-05-30 10:21:28,234 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([employee1_1_0_] : [INTEGER]) - [10]
2019-05-30 10:21:28,234 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([project_2_1_0_] : [INTEGER]) - [9]
2019-05-30 10:21:28,234 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-3] Created collection wrapper: [com.manytomany.model.Project.employees#9]
2019-05-30 10:21:31,288 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] select employee0_.employee_id as employee1_0_0_, employee0_.emp_age as emp_age2_0_0_, employee0_.emp_name as emp_name3_0_0_ from employee employee0_ where employee0_.employee_id=?
2019-05-30 10:21:31,289 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [INTEGER] - [11]
2019-05-30 10:21:31,290 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([emp_age2_0_0_] : [INTEGER]) - [26]
2019-05-30 10:21:31,290 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([emp_name3_0_0_] : [VARCHAR]) - [Rock]
2019-05-30 10:21:31,290 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-4] Created collection wrapper: [com.manytomany.model.Employee.projects#11]
2019-05-30 10:21:31,292 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] select projects0_.employee_id as employee1_1_0_, projects0_.project_id as project_2_1_0_, project1_.project_id as project_1_2_1_, project1_.project_description as project_2_2_1_, project1_.project_name as project_3_2_1_ from employee_project projects0_ inner join project project1_ on projects0_.project_id=project1_.project_id where projects0_.employee_id=?
2019-05-30 10:21:31,292 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [INTEGER] - [11]
2019-05-30 10:21:31,295 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([project_1_2_1_] : [INTEGER]) - [9]
2019-05-30 10:21:31,295 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([project_2_2_1_] : [VARCHAR]) - [Project 1 Details]
2019-05-30 10:21:31,295 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([project_3_2_1_] : [VARCHAR]) - [Project 1]
2019-05-30 10:21:31,295 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([employee1_1_0_] : [INTEGER]) - [11]
2019-05-30 10:21:31,295 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([project_2_1_0_] : [INTEGER]) - [9]
2019-05-30 10:21:31,295 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-4] Created collection wrapper: [com.manytomany.model.Project.employees#9]
2019-05-30 10:21:36,763 DEBUG org.hibernate.SQL [http-nio-8080-exec-5] select employee0_.employee_id as employee1_0_0_, employee0_.emp_age as emp_age2_0_0_, employee0_.emp_name as emp_name3_0_0_ from employee employee0_ where employee0_.employee_id=?
2019-05-30 10:21:36,763 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [INTEGER] - [3]
2019-05-30 10:21:36,764 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([emp_age2_0_0_] : [INTEGER]) - [24]
2019-05-30 10:21:36,764 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-5] extracted value ([emp_name3_0_0_] : [VARCHAR]) - [Max]
2019-05-30 10:21:36,764 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-5] Created collection wrapper: [com.manytomany.model.Employee.projects#3]
2019-05-30 10:21:36,767 DEBUG org.hibernate.SQL [http-nio-8080-exec-5] select projects0_.employee_id as employee1_1_0_, projects0_.project_id as project_2_1_0_, project1_.project_id as project_1_2_1_, project1_.project_description as project_2_2_1_, project1_.project_name as project_3_2_1_ from employee_project projects0_ inner join project project1_ on projects0_.project_id=project1_.project_id where projects0_.employee_id=?
2019-05-30 10:21:36,767 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-5] binding parameter [1] as [INTEGER] - [3]
2019-05-30 10:21:39,612 DEBUG org.hibernate.SQL [http-nio-8080-exec-6] select employee0_.employee_id as employee1_0_0_, employee0_.emp_age as emp_age2_0_0_, employee0_.emp_name as emp_name3_0_0_ from employee employee0_ where employee0_.employee_id=?
2019-05-30 10:21:39,613 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [INTEGER] - [10]
2019-05-30 10:21:39,614 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-6] extracted value ([emp_age2_0_0_] : [INTEGER]) - [26]
2019-05-30 10:21:39,614 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-6] extracted value ([emp_name3_0_0_] : [VARCHAR]) - [Mickey]
2019-05-30 10:21:39,615 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-6] Created collection wrapper: [com.manytomany.model.Employee.projects#10]
2019-05-30 10:21:39,617 DEBUG org.hibernate.SQL [http-nio-8080-exec-6] select projects0_.employee_id as employee1_1_0_, projects0_.project_id as project_2_1_0_, project1_.project_id as project_1_2_1_, project1_.project_description as project_2_2_1_, project1_.project_name as project_3_2_1_ from employee_project projects0_ inner join project project1_ on projects0_.project_id=project1_.project_id where projects0_.employee_id=?
2019-05-30 10:21:39,618 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-6] binding parameter [1] as [INTEGER] - [10]
2019-05-30 10:21:39,622 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-6] extracted value ([project_1_2_1_] : [INTEGER]) - [9]
2019-05-30 10:21:39,622 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-6] extracted value ([project_2_2_1_] : [VARCHAR]) - [Project 1 Details]
2019-05-30 10:21:39,622 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-6] extracted value ([project_3_2_1_] : [VARCHAR]) - [Project 1]
2019-05-30 10:21:39,622 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-6] extracted value ([employee1_1_0_] : [INTEGER]) - [10]
2019-05-30 10:21:39,622 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-6] extracted value ([project_2_1_0_] : [INTEGER]) - [9]
2019-05-30 10:21:39,623 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-6] Created collection wrapper: [com.manytomany.model.Project.employees#9]
2019-05-30 10:21:45,097 DEBUG org.hibernate.SQL [http-nio-8080-exec-7] select employee0_.employee_id as employee1_0_0_, employee0_.emp_age as emp_age2_0_0_, employee0_.emp_name as emp_name3_0_0_ from employee employee0_ where employee0_.employee_id=?
2019-05-30 10:21:45,097 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [INTEGER] - [10]
2019-05-30 10:21:45,098 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-7] extracted value ([emp_age2_0_0_] : [INTEGER]) - [26]
2019-05-30 10:21:45,098 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-7] extracted value ([emp_name3_0_0_] : [VARCHAR]) - [Mickey]
2019-05-30 10:21:45,098 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-7] Created collection wrapper: [com.manytomany.model.Employee.projects#10]
2019-05-30 10:21:45,099 DEBUG org.hibernate.SQL [http-nio-8080-exec-7] select projects0_.employee_id as employee1_1_0_, projects0_.project_id as project_2_1_0_, project1_.project_id as project_1_2_1_, project1_.project_description as project_2_2_1_, project1_.project_name as project_3_2_1_ from employee_project projects0_ inner join project project1_ on projects0_.project_id=project1_.project_id where projects0_.employee_id=?
2019-05-30 10:21:45,099 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [INTEGER] - [10]
2019-05-30 10:21:45,102 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-7] extracted value ([project_1_2_1_] : [INTEGER]) - [9]
2019-05-30 10:21:45,103 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-7] extracted value ([project_2_2_1_] : [VARCHAR]) - [Project 1 Details]
2019-05-30 10:21:45,104 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-7] extracted value ([project_3_2_1_] : [VARCHAR]) - [Project 1]
2019-05-30 10:21:45,104 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-7] extracted value ([employee1_1_0_] : [INTEGER]) - [10]
2019-05-30 10:21:45,104 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-7] extracted value ([project_2_1_0_] : [INTEGER]) - [9]
2019-05-30 10:21:45,105 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-7] Created collection wrapper: [com.manytomany.model.Project.employees#9]
2019-05-30 10:21:45,108 DEBUG org.hibernate.SQL [http-nio-8080-exec-7] delete from employee_project where employee_id=?
2019-05-30 10:21:45,109 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [INTEGER] - [10]
2019-05-30 10:21:45,135 DEBUG org.hibernate.SQL [http-nio-8080-exec-7] delete from project where project_id=?
2019-05-30 10:21:45,136 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [INTEGER] - [9]
2019-05-30 10:21:45,139 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-7] SQL Error: 1451, SQLState: 23000
2019-05-30 10:21:45,139 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-7] Cannot delete or update a parent row: a foreign key constraint fails (`employeeDB`.`employee_project`, CONSTRAINT `FK4yddvnm7283a40plkcti66wv9` FOREIGN KEY (`project_id`) REFERENCES `project` (`project_id`))
2019-05-30 10:21:45,140 INFO org.hibernate.engine.jdbc.batch.internal.AbstractBatchImpl [http-nio-8080-exec-7] HHH000010: On release of batch it still contained JDBC statements
2019-05-30 10:21:45,141 ERROR org.hibernate.internal.ExceptionMapperStandardImpl [http-nio-8080-exec-7] HHH000346: Error during managed flush [org.hibernate.exception.ConstraintViolationException: could not execute statement]
2019-05-30 10:23:22,415 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [Thread-22] Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3378b89a] for TypeConfiguration
2019-05-30 10:23:22,416 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [Thread-22] Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1ce838ab] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3378b89a]
2019-05-30 10:23:22,418 INFO com.zaxxer.hikari.HikariDataSource [Thread-22] HikariPool-4 - Shutdown initiated...
2019-05-30 10:23:22,434 INFO com.zaxxer.hikari.HikariDataSource [Thread-22] HikariPool-4 - Shutdown completed.
2019-05-30 10:23:22,786 INFO com.manytomany.ManyToManyApplication [restartedMain] Starting ManyToManyApplication on Cgt-Jod-Lin-Adityam with PID 4944 (/home/cgt_jod_lin_kanhavm/eclipse-workspace/ManyToMany/target/classes started by cgt_jod_lin_kanhavm in /home/cgt_jod_lin_kanhavm/eclipse-workspace/ManyToMany)
2019-05-30 10:23:22,787 INFO com.manytomany.ManyToManyApplication [restartedMain] No active profile set, falling back to default profiles: default
2019-05-30 10:23:23,475 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2019-05-30 10:23:23,478 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.19]
2019-05-30 10:23:23,524 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2019-05-30 10:23:23,630 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-5 - Starting...
2019-05-30 10:23:23,696 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-5 - Start completed.
2019-05-30 10:23:23,702 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2019-05-30 10:23:23,708 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration boolean -> org.hibernate.type.BooleanType@7f85e81a
2019-05-30 10:23:23,709 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration boolean -> org.hibernate.type.BooleanType@7f85e81a
2019-05-30 10:23:23,709 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7f85e81a
2019-05-30 10:23:23,709 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@606e5269
2019-05-30 10:23:23,709 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration true_false -> org.hibernate.type.TrueFalseType@620b39da
2019-05-30 10:23:23,709 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration yes_no -> org.hibernate.type.YesNoType@4fb53d45
2019-05-30 10:23:23,709 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration byte -> org.hibernate.type.ByteType@30b58da6
2019-05-30 10:23:23,709 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration byte -> org.hibernate.type.ByteType@30b58da6
2019-05-30 10:23:23,709 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@30b58da6
2019-05-30 10:23:23,709 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration character -> org.hibernate.type.CharacterType@3d1cc233
2019-05-30 10:23:23,709 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration char -> org.hibernate.type.CharacterType@3d1cc233
2019-05-30 10:23:23,709 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3d1cc233
2019-05-30 10:23:23,709 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration short -> org.hibernate.type.ShortType@472f3360
2019-05-30 10:23:23,709 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration short -> org.hibernate.type.ShortType@472f3360
2019-05-30 10:23:23,709 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@472f3360
2019-05-30 10:23:23,709 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration integer -> org.hibernate.type.IntegerType@3661a064
2019-05-30 10:23:23,709 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration int -> org.hibernate.type.IntegerType@3661a064
2019-05-30 10:23:23,709 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3661a064
2019-05-30 10:23:23,709 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration long -> org.hibernate.type.LongType@37ca8e03
2019-05-30 10:23:23,709 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration long -> org.hibernate.type.LongType@37ca8e03
2019-05-30 10:23:23,709 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Long -> org.hibernate.type.LongType@37ca8e03
2019-05-30 10:23:23,709 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration float -> org.hibernate.type.FloatType@198ebd4c
2019-05-30 10:23:23,709 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration float -> org.hibernate.type.FloatType@198ebd4c
2019-05-30 10:23:23,709 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@198ebd4c
2019-05-30 10:23:23,709 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration double -> org.hibernate.type.DoubleType@286c6b4
2019-05-30 10:23:23,709 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration double -> org.hibernate.type.DoubleType@286c6b4
2019-05-30 10:23:23,709 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@286c6b4
2019-05-30 10:23:23,709 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@136d7372
2019-05-30 10:23:23,709 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@136d7372
2019-05-30 10:23:23,709 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4999ddf6
2019-05-30 10:23:23,710 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4999ddf6
2019-05-30 10:23:23,710 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration string -> org.hibernate.type.StringType@38541ab8
2019-05-30 10:23:23,710 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.String -> org.hibernate.type.StringType@38541ab8
2019-05-30 10:23:23,710 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5e40351f
2019-05-30 10:23:23,710 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7d411aac
2019-05-30 10:23:23,710 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration url -> org.hibernate.type.UrlType@23b8b6a0
2019-05-30 10:23:23,710 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.net.URL -> org.hibernate.type.UrlType@23b8b6a0
2019-05-30 10:23:23,710 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Duration -> org.hibernate.type.DurationType@66b0bbc8
2019-05-30 10:23:23,710 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@66b0bbc8
2019-05-30 10:23:23,710 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Instant -> org.hibernate.type.InstantType@6b558d11
2019-05-30 10:23:23,710 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6b558d11
2019-05-30 10:23:23,710 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3b9ef39
2019-05-30 10:23:23,710 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3b9ef39
2019-05-30 10:23:23,710 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@48cda13b
2019-05-30 10:23:23,710 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@48cda13b
2019-05-30 10:23:23,710 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@766f9e31
2019-05-30 10:23:23,710 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@766f9e31
2019-05-30 10:23:23,710 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4ef58621
2019-05-30 10:23:23,710 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4ef58621
2019-05-30 10:23:23,710 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@38454114
2019-05-30 10:23:23,710 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@38454114
2019-05-30 10:23:23,710 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5b1d9cb3
2019-05-30 10:23:23,710 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5b1d9cb3
2019-05-30 10:23:23,710 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration date -> org.hibernate.type.DateType@2d8ed5e3
2019-05-30 10:23:23,710 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d8ed5e3
2019-05-30 10:23:23,710 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration time -> org.hibernate.type.TimeType@2bed9be2
2019-05-30 10:23:23,710 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2bed9be2
2019-05-30 10:23:23,710 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration timestamp -> org.hibernate.type.TimestampType@1cd8838
2019-05-30 10:23:23,711 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1cd8838
2019-05-30 10:23:23,711 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1cd8838
2019-05-30 10:23:23,711 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@543beec4
2019-05-30 10:23:23,711 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration calendar -> org.hibernate.type.CalendarType@7282875c
2019-05-30 10:23:23,711 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7282875c
2019-05-30 10:23:23,711 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7282875c
2019-05-30 10:23:23,711 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@63e710a7
2019-05-30 10:23:23,711 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration locale -> org.hibernate.type.LocaleType@5ff467f8
2019-05-30 10:23:23,711 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5ff467f8
2019-05-30 10:23:23,711 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration currency -> org.hibernate.type.CurrencyType@63dc0504
2019-05-30 10:23:23,711 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@63dc0504
2019-05-30 10:23:23,711 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration timezone -> org.hibernate.type.TimeZoneType@48b6c630
2019-05-30 10:23:23,711 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@48b6c630
2019-05-30 10:23:23,711 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration class -> org.hibernate.type.ClassType@f0c1bce
2019-05-30 10:23:23,711 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f0c1bce
2019-05-30 10:23:23,711 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@568480da
2019-05-30 10:23:23,711 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@568480da
2019-05-30 10:23:23,711 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2272ec6f
2019-05-30 10:23:23,711 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration binary -> org.hibernate.type.BinaryType@74e5139e
2019-05-30 10:23:23,711 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration byte[] -> org.hibernate.type.BinaryType@74e5139e
2019-05-30 10:23:23,711 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [B -> org.hibernate.type.BinaryType@74e5139e
2019-05-30 10:23:23,711 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@656bd689
2019-05-30 10:23:23,711 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@656bd689
2019-05-30 10:23:23,711 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@656bd689
2019-05-30 10:23:23,711 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration row_version -> org.hibernate.type.RowVersionType@20264c89
2019-05-30 10:23:23,711 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration image -> org.hibernate.type.ImageType@587cbd25
2019-05-30 10:23:23,711 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration characters -> org.hibernate.type.CharArrayType@33673d11
2019-05-30 10:23:23,711 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration char[] -> org.hibernate.type.CharArrayType@33673d11
2019-05-30 10:23:23,712 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [C -> org.hibernate.type.CharArrayType@33673d11
2019-05-30 10:23:23,712 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@186a425f
2019-05-30 10:23:23,712 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@186a425f
2019-05-30 10:23:23,712 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@186a425f
2019-05-30 10:23:23,712 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration text -> org.hibernate.type.TextType@2fd6e37e
2019-05-30 10:23:23,712 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration ntext -> org.hibernate.type.NTextType@41c406d7
2019-05-30 10:23:23,712 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration blob -> org.hibernate.type.BlobType@156c07ba
2019-05-30 10:23:23,712 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@156c07ba
2019-05-30 10:23:23,712 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7662961
2019-05-30 10:23:23,712 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration clob -> org.hibernate.type.ClobType@2cc33219
2019-05-30 10:23:23,712 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2cc33219
2019-05-30 10:23:23,712 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration nclob -> org.hibernate.type.NClobType@7d8545f4
2019-05-30 10:23:23,712 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7d8545f4
2019-05-30 10:23:23,712 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7e303e7a
2019-05-30 10:23:23,712 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7587bb1b
2019-05-30 10:23:23,712 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration serializable -> org.hibernate.type.SerializableType@57139667
2019-05-30 10:23:23,712 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration object -> org.hibernate.type.ObjectType@42ef1b8
2019-05-30 10:23:23,712 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@42ef1b8
2019-05-30 10:23:23,712 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4da4806a
2019-05-30 10:23:23,712 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@41122b85
2019-05-30 10:23:23,712 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@600ee2d
2019-05-30 10:23:23,712 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@269826f
2019-05-30 10:23:23,712 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6ba7e598
2019-05-30 10:23:23,712 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3b39b56a
2019-05-30 10:23:23,712 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3a4945a6
2019-05-30 10:23:23,712 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@74fdc27a
2019-05-30 10:23:23,716 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2019-05-30 10:23:23,725 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [restartedMain] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@646e47b0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@cfed5f4]
2019-05-30 10:23:23,774 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [restartedMain] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@646e47b0] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@65dc01da]
2019-05-30 10:23:23,907 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [restartedMain] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@65dc01da] for TypeConfiguration
2019-05-30 10:23:24,342 INFO com.manytomany.ManyToManyApplication [restartedMain] Started ManyToManyApplication in 1.615 seconds (JVM running for 430.241)
2019-05-30 10:23:32,425 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-05-30 10:23:32,461 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] select employee0_.employee_id as employee1_0_0_, employee0_.emp_age as emp_age2_0_0_, employee0_.emp_name as emp_name3_0_0_ from employee employee0_ where employee0_.employee_id=?
2019-05-30 10:23:32,461 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [INTEGER] - [10]
2019-05-30 10:23:32,462 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([emp_age2_0_0_] : [INTEGER]) - [26]
2019-05-30 10:23:32,462 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([emp_name3_0_0_] : [VARCHAR]) - [Mickey]
2019-05-30 10:23:32,462 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-2] Created collection wrapper: [com.manytomany.model.Employee.projects#10]
2019-05-30 10:23:32,466 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] select projects0_.employee_id as employee1_1_0_, projects0_.project_id as project_2_1_0_, project1_.project_id as project_1_2_1_, project1_.project_description as project_2_2_1_, project1_.project_name as project_3_2_1_ from employee_project projects0_ inner join project project1_ on projects0_.project_id=project1_.project_id where projects0_.employee_id=?
2019-05-30 10:23:32,466 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [INTEGER] - [10]
2019-05-30 10:23:32,467 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([project_1_2_1_] : [INTEGER]) - [9]
2019-05-30 10:23:32,467 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([project_2_2_1_] : [VARCHAR]) - [Project 1 Details]
2019-05-30 10:23:32,467 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([project_3_2_1_] : [VARCHAR]) - [Project 1]
2019-05-30 10:23:32,467 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([employee1_1_0_] : [INTEGER]) - [10]
2019-05-30 10:23:32,468 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([project_2_1_0_] : [INTEGER]) - [9]
2019-05-30 10:23:32,468 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-2] Created collection wrapper: [com.manytomany.model.Project.employees#9]
2019-05-30 10:23:32,470 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] delete from employee_project where employee_id=?
2019-05-30 10:23:32,471 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [INTEGER] - [10]
2019-05-30 10:23:32,597 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] delete from project where project_id=?
2019-05-30 10:23:32,599 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [INTEGER] - [9]
2019-05-30 10:23:32,873 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-2] SQL Error: 1451, SQLState: 23000
2019-05-30 10:23:32,873 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-2] Cannot delete or update a parent row: a foreign key constraint fails (`employeeDB`.`employee_project`, CONSTRAINT `FK4yddvnm7283a40plkcti66wv9` FOREIGN KEY (`project_id`) REFERENCES `project` (`project_id`))
2019-05-30 10:23:32,873 INFO org.hibernate.engine.jdbc.batch.internal.AbstractBatchImpl [http-nio-8080-exec-2] HHH000010: On release of batch it still contained JDBC statements
2019-05-30 10:23:32,874 ERROR org.hibernate.internal.ExceptionMapperStandardImpl [http-nio-8080-exec-2] HHH000346: Error during managed flush [org.hibernate.exception.ConstraintViolationException: could not execute statement]
2019-05-30 10:23:43,731 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [Thread-28] Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@65dc01da] for TypeConfiguration
2019-05-30 10:23:43,732 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [Thread-28] Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@289e49f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@65dc01da]
2019-05-30 10:23:43,732 INFO com.zaxxer.hikari.HikariDataSource [Thread-28] HikariPool-5 - Shutdown initiated...
2019-05-30 10:23:43,740 INFO com.zaxxer.hikari.HikariDataSource [Thread-28] HikariPool-5 - Shutdown completed.
2019-05-30 10:23:43,992 INFO com.manytomany.ManyToManyApplication [restartedMain] Starting ManyToManyApplication on Cgt-Jod-Lin-Adityam with PID 4944 (/home/cgt_jod_lin_kanhavm/eclipse-workspace/ManyToMany/target/classes started by cgt_jod_lin_kanhavm in /home/cgt_jod_lin_kanhavm/eclipse-workspace/ManyToMany)
2019-05-30 10:23:43,992 INFO com.manytomany.ManyToManyApplication [restartedMain] No active profile set, falling back to default profiles: default
2019-05-30 10:23:44,573 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2019-05-30 10:23:44,573 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.19]
2019-05-30 10:23:44,580 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2019-05-30 10:23:44,660 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-6 - Starting...
2019-05-30 10:23:44,740 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-6 - Start completed.
2019-05-30 10:23:44,746 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2019-05-30 10:23:44,763 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration boolean -> org.hibernate.type.BooleanType@7f85e81a
2019-05-30 10:23:44,763 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration boolean -> org.hibernate.type.BooleanType@7f85e81a
2019-05-30 10:23:44,763 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7f85e81a
2019-05-30 10:23:44,763 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@606e5269
2019-05-30 10:23:44,763 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration true_false -> org.hibernate.type.TrueFalseType@620b39da
2019-05-30 10:23:44,763 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration yes_no -> org.hibernate.type.YesNoType@4fb53d45
2019-05-30 10:23:44,763 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration byte -> org.hibernate.type.ByteType@30b58da6
2019-05-30 10:23:44,763 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration byte -> org.hibernate.type.ByteType@30b58da6
2019-05-30 10:23:44,763 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@30b58da6
2019-05-30 10:23:44,763 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration character -> org.hibernate.type.CharacterType@3d1cc233
2019-05-30 10:23:44,763 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration char -> org.hibernate.type.CharacterType@3d1cc233
2019-05-30 10:23:44,763 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3d1cc233
2019-05-30 10:23:44,763 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration short -> org.hibernate.type.ShortType@472f3360
2019-05-30 10:23:44,763 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration short -> org.hibernate.type.ShortType@472f3360
2019-05-30 10:23:44,763 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@472f3360
2019-05-30 10:23:44,763 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration integer -> org.hibernate.type.IntegerType@3661a064
2019-05-30 10:23:44,763 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration int -> org.hibernate.type.IntegerType@3661a064
2019-05-30 10:23:44,763 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3661a064
2019-05-30 10:23:44,763 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration long -> org.hibernate.type.LongType@37ca8e03
2019-05-30 10:23:44,763 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration long -> org.hibernate.type.LongType@37ca8e03
2019-05-30 10:23:44,763 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Long -> org.hibernate.type.LongType@37ca8e03
2019-05-30 10:23:44,763 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration float -> org.hibernate.type.FloatType@198ebd4c
2019-05-30 10:23:44,763 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration float -> org.hibernate.type.FloatType@198ebd4c
2019-05-30 10:23:44,763 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@198ebd4c
2019-05-30 10:23:44,763 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration double -> org.hibernate.type.DoubleType@286c6b4
2019-05-30 10:23:44,763 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration double -> org.hibernate.type.DoubleType@286c6b4
2019-05-30 10:23:44,763 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@286c6b4
2019-05-30 10:23:44,764 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@136d7372
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@136d7372
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4999ddf6
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4999ddf6
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration string -> org.hibernate.type.StringType@38541ab8
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.String -> org.hibernate.type.StringType@38541ab8
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5e40351f
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7d411aac
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration url -> org.hibernate.type.UrlType@23b8b6a0
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.net.URL -> org.hibernate.type.UrlType@23b8b6a0
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Duration -> org.hibernate.type.DurationType@66b0bbc8
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@66b0bbc8
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Instant -> org.hibernate.type.InstantType@6b558d11
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6b558d11
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3b9ef39
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3b9ef39
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@48cda13b
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@48cda13b
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@766f9e31
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@766f9e31
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4ef58621
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4ef58621
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@38454114
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@38454114
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5b1d9cb3
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5b1d9cb3
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration date -> org.hibernate.type.DateType@2d8ed5e3
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d8ed5e3
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration time -> org.hibernate.type.TimeType@2bed9be2
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2bed9be2
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration timestamp -> org.hibernate.type.TimestampType@1cd8838
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1cd8838
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1cd8838
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@543beec4
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration calendar -> org.hibernate.type.CalendarType@7282875c
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7282875c
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7282875c
2019-05-30 10:23:44,765 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@63e710a7
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration locale -> org.hibernate.type.LocaleType@5ff467f8
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5ff467f8
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration currency -> org.hibernate.type.CurrencyType@63dc0504
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@63dc0504
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration timezone -> org.hibernate.type.TimeZoneType@48b6c630
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@48b6c630
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration class -> org.hibernate.type.ClassType@f0c1bce
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f0c1bce
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@568480da
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@568480da
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2272ec6f
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration binary -> org.hibernate.type.BinaryType@74e5139e
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration byte[] -> org.hibernate.type.BinaryType@74e5139e
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [B -> org.hibernate.type.BinaryType@74e5139e
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@656bd689
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@656bd689
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@656bd689
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration row_version -> org.hibernate.type.RowVersionType@20264c89
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration image -> org.hibernate.type.ImageType@587cbd25
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration characters -> org.hibernate.type.CharArrayType@33673d11
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration char[] -> org.hibernate.type.CharArrayType@33673d11
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [C -> org.hibernate.type.CharArrayType@33673d11
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@186a425f
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@186a425f
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@186a425f
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration text -> org.hibernate.type.TextType@2fd6e37e
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration ntext -> org.hibernate.type.NTextType@41c406d7
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration blob -> org.hibernate.type.BlobType@156c07ba
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@156c07ba
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7662961
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration clob -> org.hibernate.type.ClobType@2cc33219
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2cc33219
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration nclob -> org.hibernate.type.NClobType@7d8545f4
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7d8545f4
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7e303e7a
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7587bb1b
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration serializable -> org.hibernate.type.SerializableType@57139667
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration object -> org.hibernate.type.ObjectType@42ef1b8
2019-05-30 10:23:44,766 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@42ef1b8
2019-05-30 10:23:44,767 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@53d7153a
2019-05-30 10:23:44,767 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2e5df5b2
2019-05-30 10:23:44,767 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@572d4cff
2019-05-30 10:23:44,767 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3b94a06d
2019-05-30 10:23:44,767 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@50010ce0
2019-05-30 10:23:44,767 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@11b09337
2019-05-30 10:23:44,767 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2cc76f4a
2019-05-30 10:23:44,767 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@324e3577
2019-05-30 10:23:44,773 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2019-05-30 10:23:44,787 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [restartedMain] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@44fbbabf] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@304a7299]
2019-05-30 10:23:44,863 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [restartedMain] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@44fbbabf] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@79f4c446]
2019-05-30 10:23:44,990 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [restartedMain] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@79f4c446] for TypeConfiguration
2019-05-30 10:23:45,383 INFO com.manytomany.ManyToManyApplication [restartedMain] Started ManyToManyApplication in 1.431 seconds (JVM running for 451.281)
2019-05-30 10:26:46,018 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-05-30 10:26:46,500 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] select next_val as id_val from hibernate_sequence for update
2019-05-30 10:26:46,535 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] update hibernate_sequence set next_val= ? where next_val=?
2019-05-30 10:26:46,858 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] insert into project (project_description, project_name, project_id) values (?, ?, ?)
2019-05-30 10:26:46,876 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [VARCHAR] - [Project 2 Details]
2019-05-30 10:26:46,878 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [2] as [VARCHAR] - [Project 2]
2019-05-30 10:26:46,886 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [3] as [INTEGER] - [12]
2019-05-30 10:28:49,068 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [Thread-34] Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@79f4c446] for TypeConfiguration
2019-05-30 10:28:49,069 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [Thread-34] Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@ecf87d9] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@79f4c446]
2019-05-30 10:28:49,071 INFO com.zaxxer.hikari.HikariDataSource [Thread-34] HikariPool-6 - Shutdown initiated...
2019-05-30 10:28:49,076 INFO com.zaxxer.hikari.HikariDataSource [Thread-34] HikariPool-6 - Shutdown completed.
2019-05-30 10:28:49,383 INFO com.manytomany.ManyToManyApplication [restartedMain] Starting ManyToManyApplication on Cgt-Jod-Lin-Adityam with PID 4944 (/home/cgt_jod_lin_kanhavm/eclipse-workspace/ManyToMany/target/classes started by cgt_jod_lin_kanhavm in /home/cgt_jod_lin_kanhavm/eclipse-workspace/ManyToMany)
2019-05-30 10:28:49,384 INFO com.manytomany.ManyToManyApplication [restartedMain] No active profile set, falling back to default profiles: default
2019-05-30 10:28:49,892 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2019-05-30 10:28:49,892 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.19]
2019-05-30 10:28:49,898 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2019-05-30 10:28:50,009 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-7 - Starting...
2019-05-30 10:28:50,073 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-7 - Start completed.
2019-05-30 10:28:50,079 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration boolean -> org.hibernate.type.BooleanType@7f85e81a
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration boolean -> org.hibernate.type.BooleanType@7f85e81a
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7f85e81a
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@606e5269
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration true_false -> org.hibernate.type.TrueFalseType@620b39da
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration yes_no -> org.hibernate.type.YesNoType@4fb53d45
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration byte -> org.hibernate.type.ByteType@30b58da6
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration byte -> org.hibernate.type.ByteType@30b58da6
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@30b58da6
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration character -> org.hibernate.type.CharacterType@3d1cc233
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration char -> org.hibernate.type.CharacterType@3d1cc233
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3d1cc233
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration short -> org.hibernate.type.ShortType@472f3360
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration short -> org.hibernate.type.ShortType@472f3360
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@472f3360
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration integer -> org.hibernate.type.IntegerType@3661a064
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration int -> org.hibernate.type.IntegerType@3661a064
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3661a064
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration long -> org.hibernate.type.LongType@37ca8e03
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration long -> org.hibernate.type.LongType@37ca8e03
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Long -> org.hibernate.type.LongType@37ca8e03
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration float -> org.hibernate.type.FloatType@198ebd4c
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration float -> org.hibernate.type.FloatType@198ebd4c
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@198ebd4c
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration double -> org.hibernate.type.DoubleType@286c6b4
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration double -> org.hibernate.type.DoubleType@286c6b4
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@286c6b4
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@136d7372
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@136d7372
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4999ddf6
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4999ddf6
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration string -> org.hibernate.type.StringType@38541ab8
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.String -> org.hibernate.type.StringType@38541ab8
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5e40351f
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7d411aac
2019-05-30 10:28:50,081 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration url -> org.hibernate.type.UrlType@23b8b6a0
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.net.URL -> org.hibernate.type.UrlType@23b8b6a0
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Duration -> org.hibernate.type.DurationType@66b0bbc8
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@66b0bbc8
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Instant -> org.hibernate.type.InstantType@6b558d11
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6b558d11
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3b9ef39
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3b9ef39
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@48cda13b
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@48cda13b
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@766f9e31
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@766f9e31
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4ef58621
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4ef58621
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@38454114
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@38454114
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5b1d9cb3
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5b1d9cb3
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration date -> org.hibernate.type.DateType@2d8ed5e3
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d8ed5e3
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration time -> org.hibernate.type.TimeType@2bed9be2
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2bed9be2
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration timestamp -> org.hibernate.type.TimestampType@1cd8838
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1cd8838
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1cd8838
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@543beec4
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration calendar -> org.hibernate.type.CalendarType@7282875c
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7282875c
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7282875c
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@63e710a7
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration locale -> org.hibernate.type.LocaleType@5ff467f8
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5ff467f8
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration currency -> org.hibernate.type.CurrencyType@63dc0504
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@63dc0504
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration timezone -> org.hibernate.type.TimeZoneType@48b6c630
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@48b6c630
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration class -> org.hibernate.type.ClassType@f0c1bce
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f0c1bce
2019-05-30 10:28:50,082 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@568480da
2019-05-30 10:28:50,083 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@568480da
2019-05-30 10:28:50,083 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2272ec6f
2019-05-30 10:28:50,083 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration binary -> org.hibernate.type.BinaryType@74e5139e
2019-05-30 10:28:50,083 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration byte[] -> org.hibernate.type.BinaryType@74e5139e
2019-05-30 10:28:50,083 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [B -> org.hibernate.type.BinaryType@74e5139e
2019-05-30 10:28:50,083 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@656bd689
2019-05-30 10:28:50,083 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@656bd689
2019-05-30 10:28:50,083 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@656bd689
2019-05-30 10:28:50,083 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration row_version -> org.hibernate.type.RowVersionType@20264c89
2019-05-30 10:28:50,083 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration image -> org.hibernate.type.ImageType@587cbd25
2019-05-30 10:28:50,083 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration characters -> org.hibernate.type.CharArrayType@33673d11
2019-05-30 10:28:50,083 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration char[] -> org.hibernate.type.CharArrayType@33673d11
2019-05-30 10:28:50,084 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [C -> org.hibernate.type.CharArrayType@33673d11
2019-05-30 10:28:50,084 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@186a425f
2019-05-30 10:28:50,084 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@186a425f
2019-05-30 10:28:50,084 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@186a425f
2019-05-30 10:28:50,084 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration text -> org.hibernate.type.TextType@2fd6e37e
2019-05-30 10:28:50,084 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration ntext -> org.hibernate.type.NTextType@41c406d7
2019-05-30 10:28:50,084 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration blob -> org.hibernate.type.BlobType@156c07ba
2019-05-30 10:28:50,084 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@156c07ba
2019-05-30 10:28:50,087 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7662961
2019-05-30 10:28:50,087 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration clob -> org.hibernate.type.ClobType@2cc33219
2019-05-30 10:28:50,087 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2cc33219
2019-05-30 10:28:50,088 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration nclob -> org.hibernate.type.NClobType@7d8545f4
2019-05-30 10:28:50,088 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7d8545f4
2019-05-30 10:28:50,088 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7e303e7a
2019-05-30 10:28:50,088 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7587bb1b
2019-05-30 10:28:50,088 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration serializable -> org.hibernate.type.SerializableType@57139667
2019-05-30 10:28:50,088 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration object -> org.hibernate.type.ObjectType@42ef1b8
2019-05-30 10:28:50,088 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@42ef1b8
2019-05-30 10:28:50,088 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@66f395e7
2019-05-30 10:28:50,088 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6f4ad585
2019-05-30 10:28:50,088 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1bb75752
2019-05-30 10:28:50,088 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@537bdb5
2019-05-30 10:28:50,088 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7f115c59
2019-05-30 10:28:50,088 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@464e58c3
2019-05-30 10:28:50,088 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@67629a9f
2019-05-30 10:28:50,088 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5f8059d3
2019-05-30 10:28:50,104 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2019-05-30 10:28:50,128 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [restartedMain] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e819a85] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@77be2bc]
2019-05-30 10:28:50,188 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [restartedMain] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e819a85] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@477a7970]
2019-05-30 10:28:50,310 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [restartedMain] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@477a7970] for TypeConfiguration
2019-05-30 10:28:50,731 INFO com.manytomany.ManyToManyApplication [restartedMain] Started ManyToManyApplication in 1.402 seconds (JVM running for 756.629)
2019-05-30 10:29:10,290 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-05-30 10:29:10,342 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] select project0_.project_id as project_1_2_0_, project0_.project_description as project_2_2_0_, project0_.project_name as project_3_2_0_ from project project0_ where project0_.project_id=?
2019-05-30 10:29:10,342 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [INTEGER] - [12]
2019-05-30 10:29:10,345 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([project_2_2_0_] : [VARCHAR]) - [Project 2 Details]
2019-05-30 10:29:10,345 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([project_3_2_0_] : [VARCHAR]) - [Project 2]
2019-05-30 10:29:10,345 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-2] Created collection wrapper: [com.manytomany.model.Project.employees#12]
2019-05-30 10:29:10,384 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] select employee0_.employee_id as employee1_0_1_, employee0_.emp_age as emp_age2_0_1_, employee0_.emp_name as emp_name3_0_1_, projects1_.employee_id as employee1_1_3_, project2_.project_id as project_2_1_3_, project2_.project_id as project_1_2_0_, project2_.project_description as project_2_2_0_, project2_.project_name as project_3_2_0_ from employee employee0_ left outer join employee_project projects1_ on employee0_.employee_id=projects1_.employee_id left outer join project project2_ on projects1_.project_id=project2_.project_id where employee0_.employee_id=?
2019-05-30 10:29:10,384 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [INTEGER] - [3]
2019-05-30 10:29:10,396 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([project_1_2_0_] : [INTEGER]) - [null]
2019-05-30 10:29:10,396 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([emp_age2_0_1_] : [INTEGER]) - [24]
2019-05-30 10:29:10,396 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([emp_name3_0_1_] : [VARCHAR]) - [Max]
2019-05-30 10:29:10,396 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-2] extracted value ([employee1_1_3_] : [INTEGER]) - [null]
2019-05-30 10:29:10,400 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] update employee set emp_age=?, emp_name=? where employee_id=?
2019-05-30 10:29:10,400 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [INTEGER] - [26]
2019-05-30 10:29:10,400 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [2] as [VARCHAR] - [Maxy]
2019-05-30 10:29:10,400 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [3] as [INTEGER] - [3]
2019-05-30 10:29:10,483 DEBUG org.hibernate.SQL [http-nio-8080-exec-2] insert into employee_project (employee_id, project_id) values (?, ?)
2019-05-30 10:29:10,485 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [1] as [INTEGER] - [3]
2019-05-30 10:29:10,485 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-2] binding parameter [2] as [INTEGER] - [12]
2019-05-30 10:29:27,322 DEBUG org.hibernate.SQL [http-nio-8080-exec-3] select project0_.project_id as project_1_2_0_, project0_.project_description as project_2_2_0_, project0_.project_name as project_3_2_0_ from project project0_ where project0_.project_id=?
2019-05-30 10:29:27,323 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [INTEGER] - [12]
2019-05-30 10:29:27,325 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([project_2_2_0_] : [VARCHAR]) - [Project 2 Details]
2019-05-30 10:29:27,326 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([project_3_2_0_] : [VARCHAR]) - [Project 2]
2019-05-30 10:29:27,326 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-3] Created collection wrapper: [com.manytomany.model.Project.employees#12]
2019-05-30 10:29:27,334 DEBUG org.hibernate.SQL [http-nio-8080-exec-3] select employee0_.employee_id as employee1_0_1_, employee0_.emp_age as emp_age2_0_1_, employee0_.emp_name as emp_name3_0_1_, projects1_.employee_id as employee1_1_3_, project2_.project_id as project_2_1_3_, project2_.project_id as project_1_2_0_, project2_.project_description as project_2_2_0_, project2_.project_name as project_3_2_0_ from employee employee0_ left outer join employee_project projects1_ on employee0_.employee_id=projects1_.employee_id left outer join project project2_ on projects1_.project_id=project2_.project_id where employee0_.employee_id=?
2019-05-30 10:29:27,334 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [INTEGER] - [3]
2019-05-30 10:29:27,340 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([project_1_2_0_] : [INTEGER]) - [12]
2019-05-30 10:29:27,340 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([emp_age2_0_1_] : [INTEGER]) - [26]
2019-05-30 10:29:27,348 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([emp_name3_0_1_] : [VARCHAR]) - [Maxy]
2019-05-30 10:29:27,348 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([employee1_1_3_] : [INTEGER]) - [3]
2019-05-30 10:29:27,348 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-3] extracted value ([project_2_1_3_] : [INTEGER]) - [12]
2019-05-30 10:29:27,350 DEBUG org.hibernate.SQL [http-nio-8080-exec-3] delete from employee_project where employee_id=?
2019-05-30 10:29:27,350 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [INTEGER] - [3]
2019-05-30 10:29:27,351 DEBUG org.hibernate.SQL [http-nio-8080-exec-3] insert into employee_project (employee_id, project_id) values (?, ?)
2019-05-30 10:29:27,354 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [1] as [INTEGER] - [3]
2019-05-30 10:29:27,354 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-3] binding parameter [2] as [INTEGER] - [12]
2019-05-30 10:29:47,391 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] select employee0_.employee_id as employee1_0_0_, employee0_.emp_age as emp_age2_0_0_, employee0_.emp_name as emp_name3_0_0_ from employee employee0_ where employee0_.employee_id=?
2019-05-30 10:29:47,393 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [INTEGER] - [3]
2019-05-30 10:29:47,394 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([emp_age2_0_0_] : [INTEGER]) - [26]
2019-05-30 10:29:47,394 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([emp_name3_0_0_] : [VARCHAR]) - [Maxy]
2019-05-30 10:29:47,394 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-4] Created collection wrapper: [com.manytomany.model.Employee.projects#3]
2019-05-30 10:29:47,394 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] select projects0_.employee_id as employee1_1_0_, projects0_.project_id as project_2_1_0_, project1_.project_id as project_1_2_1_, project1_.project_description as project_2_2_1_, project1_.project_name as project_3_2_1_ from employee_project projects0_ inner join project project1_ on projects0_.project_id=project1_.project_id where projects0_.employee_id=?
2019-05-30 10:29:47,395 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [INTEGER] - [3]
2019-05-30 10:29:47,414 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([project_1_2_1_] : [INTEGER]) - [12]
2019-05-30 10:29:47,415 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([project_2_2_1_] : [VARCHAR]) - [Project 2 Details]
2019-05-30 10:29:47,415 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([project_3_2_1_] : [VARCHAR]) - [Project 2]
2019-05-30 10:29:47,415 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([employee1_1_0_] : [INTEGER]) - [3]
2019-05-30 10:29:47,415 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([project_2_1_0_] : [INTEGER]) - [12]
2019-05-30 10:29:47,415 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-4] Created collection wrapper: [com.manytomany.model.Project.employees#12]
2019-05-30 10:29:47,420 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] delete from employee_project where employee_id=?
2019-05-30 10:29:47,420 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [INTEGER] - [3]
2019-05-30 10:29:47,529 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] delete from project where project_id=?
2019-05-30 10:29:47,530 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [INTEGER] - [12]
2019-05-30 10:29:47,804 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] delete from employee where employee_id=?
2019-05-30 10:29:47,806 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [INTEGER] - [3]
2019-05-30 10:31:41,277 DEBUG org.hibernate.SQL [http-nio-8080-exec-7] select employee0_.employee_id as employee1_0_0_, employee0_.emp_age as emp_age2_0_0_, employee0_.emp_name as emp_name3_0_0_ from employee employee0_ where employee0_.employee_id=?
2019-05-30 10:31:41,279 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [INTEGER] - [10]
2019-05-30 10:31:41,282 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-7] extracted value ([emp_age2_0_0_] : [INTEGER]) - [26]
2019-05-30 10:31:41,283 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-7] extracted value ([emp_name3_0_0_] : [VARCHAR]) - [Mickey]
2019-05-30 10:31:41,283 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-7] Created collection wrapper: [com.manytomany.model.Employee.projects#10]
2019-05-30 10:31:41,283 DEBUG org.hibernate.SQL [http-nio-8080-exec-7] select projects0_.employee_id as employee1_1_0_, projects0_.project_id as project_2_1_0_, project1_.project_id as project_1_2_1_, project1_.project_description as project_2_2_1_, project1_.project_name as project_3_2_1_ from employee_project projects0_ inner join project project1_ on projects0_.project_id=project1_.project_id where projects0_.employee_id=?
2019-05-30 10:31:41,284 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [INTEGER] - [10]
2019-05-30 10:31:41,285 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-7] extracted value ([project_1_2_1_] : [INTEGER]) - [9]
2019-05-30 10:31:41,285 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-7] extracted value ([project_2_2_1_] : [VARCHAR]) - [Project 1 Details]
2019-05-30 10:31:41,285 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-7] extracted value ([project_3_2_1_] : [VARCHAR]) - [Project 1]
2019-05-30 10:31:41,285 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-7] extracted value ([employee1_1_0_] : [INTEGER]) - [10]
2019-05-30 10:31:41,285 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-7] extracted value ([project_2_1_0_] : [INTEGER]) - [9]
2019-05-30 10:31:41,285 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-7] Created collection wrapper: [com.manytomany.model.Project.employees#9]
2019-05-30 10:31:41,286 DEBUG org.hibernate.SQL [http-nio-8080-exec-7] delete from employee_project where employee_id=?
2019-05-30 10:31:41,287 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [INTEGER] - [10]
2019-05-30 10:31:41,333 DEBUG org.hibernate.SQL [http-nio-8080-exec-7] delete from project where project_id=?
2019-05-30 10:31:41,334 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-7] binding parameter [1] as [INTEGER] - [9]
2019-05-30 10:31:41,361 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-7] SQL Error: 1451, SQLState: 23000
2019-05-30 10:31:41,361 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-7] Cannot delete or update a parent row: a foreign key constraint fails (`employeeDB`.`employee_project`, CONSTRAINT `FK4yddvnm7283a40plkcti66wv9` FOREIGN KEY (`project_id`) REFERENCES `project` (`project_id`))
2019-05-30 10:31:41,361 INFO org.hibernate.engine.jdbc.batch.internal.AbstractBatchImpl [http-nio-8080-exec-7] HHH000010: On release of batch it still contained JDBC statements
2019-05-30 10:31:41,362 ERROR org.hibernate.internal.ExceptionMapperStandardImpl [http-nio-8080-exec-7] HHH000346: Error during managed flush [org.hibernate.exception.ConstraintViolationException: could not execute statement]
2019-05-30 10:39:52,969 DEBUG org.hibernate.SQL [http-nio-8080-exec-10] select employee0_.employee_id as employee1_0_0_, employee0_.emp_age as emp_age2_0_0_, employee0_.emp_name as emp_name3_0_0_ from employee employee0_ where employee0_.employee_id=?
2019-05-30 10:39:52,970 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [INTEGER] - [10]
2019-05-30 10:39:52,971 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-10] extracted value ([emp_age2_0_0_] : [INTEGER]) - [26]
2019-05-30 10:39:52,971 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-10] extracted value ([emp_name3_0_0_] : [VARCHAR]) - [Mickey]
2019-05-30 10:39:52,971 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-10] Created collection wrapper: [com.manytomany.model.Employee.projects#10]
2019-05-30 10:39:52,972 DEBUG org.hibernate.SQL [http-nio-8080-exec-10] select projects0_.employee_id as employee1_1_0_, projects0_.project_id as project_2_1_0_, project1_.project_id as project_1_2_1_, project1_.project_description as project_2_2_1_, project1_.project_name as project_3_2_1_ from employee_project projects0_ inner join project project1_ on projects0_.project_id=project1_.project_id where projects0_.employee_id=?
2019-05-30 10:39:52,973 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [INTEGER] - [10]
2019-05-30 10:39:52,974 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-10] extracted value ([project_1_2_1_] : [INTEGER]) - [9]
2019-05-30 10:39:52,974 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-10] extracted value ([project_2_2_1_] : [VARCHAR]) - [Project 1 Details]
2019-05-30 10:39:52,974 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-10] extracted value ([project_3_2_1_] : [VARCHAR]) - [Project 1]
2019-05-30 10:39:52,974 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-10] extracted value ([employee1_1_0_] : [INTEGER]) - [10]
2019-05-30 10:39:52,974 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-10] extracted value ([project_2_1_0_] : [INTEGER]) - [9]
2019-05-30 10:39:52,974 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-10] Created collection wrapper: [com.manytomany.model.Project.employees#9]
2019-05-30 10:39:52,975 DEBUG org.hibernate.SQL [http-nio-8080-exec-10] delete from employee_project where employee_id=?
2019-05-30 10:39:52,976 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [INTEGER] - [10]
2019-05-30 10:39:53,012 DEBUG org.hibernate.SQL [http-nio-8080-exec-10] delete from project where project_id=?
2019-05-30 10:39:53,013 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-10] binding parameter [1] as [INTEGER] - [9]
2019-05-30 10:39:53,237 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-10] SQL Error: 1451, SQLState: 23000
2019-05-30 10:39:53,237 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-10] Cannot delete or update a parent row: a foreign key constraint fails (`employeeDB`.`employee_project`, CONSTRAINT `FK4yddvnm7283a40plkcti66wv9` FOREIGN KEY (`project_id`) REFERENCES `project` (`project_id`))
2019-05-30 10:39:53,237 INFO org.hibernate.engine.jdbc.batch.internal.AbstractBatchImpl [http-nio-8080-exec-10] HHH000010: On release of batch it still contained JDBC statements
2019-05-30 10:39:53,238 ERROR org.hibernate.internal.ExceptionMapperStandardImpl [http-nio-8080-exec-10] HHH000346: Error during managed flush [org.hibernate.exception.ConstraintViolationException: could not execute statement]
2019-05-30 10:45:12,760 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [Thread-45] Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@477a7970] for TypeConfiguration
2019-05-30 10:45:12,843 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [Thread-45] Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@eebb38b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@477a7970]
2019-05-30 10:45:12,893 INFO com.zaxxer.hikari.HikariDataSource [Thread-45] HikariPool-7 - Shutdown initiated...
2019-05-30 10:45:12,900 INFO com.zaxxer.hikari.HikariDataSource [Thread-45] HikariPool-7 - Shutdown completed.
2019-05-30 10:46:47,866 INFO com.manytomany.ManyToManyApplication [restartedMain] Starting ManyToManyApplication on Cgt-Jod-Lin-Adityam with PID 6002 (/home/cgt_jod_lin_kanhavm/eclipse-workspace/ManyToMany/target/classes started by cgt_jod_lin_kanhavm in /home/cgt_jod_lin_kanhavm/eclipse-workspace/ManyToMany)
2019-05-30 10:46:47,925 INFO com.manytomany.ManyToManyApplication [restartedMain] No active profile set, falling back to default profiles: default
2019-05-30 10:46:58,821 INFO org.apache.catalina.core.StandardService [restartedMain] Starting service [Tomcat]
2019-05-30 10:46:58,821 INFO org.apache.catalina.core.StandardEngine [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.19]
2019-05-30 10:46:59,339 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [restartedMain] Initializing Spring embedded WebApplicationContext
2019-05-30 10:47:00,507 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2019-05-30 10:47:03,493 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2019-05-30 10:47:04,207 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2019-05-30 10:47:04,831 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate Core {5.3.10.Final}
2019-05-30 10:47:04,860 INFO org.hibernate.cfg.Environment [restartedMain] HHH000206: hibernate.properties not found
2019-05-30 10:47:06,118 INFO org.hibernate.annotations.common.Version [restartedMain] HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2019-05-30 10:47:06,371 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration boolean -> org.hibernate.type.BooleanType@a0f39fb
2019-05-30 10:47:06,372 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration boolean -> org.hibernate.type.BooleanType@a0f39fb
2019-05-30 10:47:06,372 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@a0f39fb
2019-05-30 10:47:06,372 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@62b1198a
2019-05-30 10:47:06,373 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration true_false -> org.hibernate.type.TrueFalseType@6c3c505c
2019-05-30 10:47:06,373 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration yes_no -> org.hibernate.type.YesNoType@6e6a11bd
2019-05-30 10:47:06,375 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration byte -> org.hibernate.type.ByteType@4b7c00d5
2019-05-30 10:47:06,375 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration byte -> org.hibernate.type.ByteType@4b7c00d5
2019-05-30 10:47:06,375 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4b7c00d5
2019-05-30 10:47:06,376 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration character -> org.hibernate.type.CharacterType@6ceb6563
2019-05-30 10:47:06,376 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration char -> org.hibernate.type.CharacterType@6ceb6563
2019-05-30 10:47:06,376 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6ceb6563
2019-05-30 10:47:06,378 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration short -> org.hibernate.type.ShortType@bf118ed
2019-05-30 10:47:06,378 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration short -> org.hibernate.type.ShortType@bf118ed
2019-05-30 10:47:06,378 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Short -> org.hibernate.type.ShortType@bf118ed
2019-05-30 10:47:06,379 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration integer -> org.hibernate.type.IntegerType@3a07cc05
2019-05-30 10:47:06,379 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration int -> org.hibernate.type.IntegerType@3a07cc05
2019-05-30 10:47:06,379 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3a07cc05
2019-05-30 10:47:06,380 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration long -> org.hibernate.type.LongType@5612d622
2019-05-30 10:47:06,380 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration long -> org.hibernate.type.LongType@5612d622
2019-05-30 10:47:06,380 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Long -> org.hibernate.type.LongType@5612d622
2019-05-30 10:47:06,381 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration float -> org.hibernate.type.FloatType@6b756e88
2019-05-30 10:47:06,381 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration float -> org.hibernate.type.FloatType@6b756e88
2019-05-30 10:47:06,381 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6b756e88
2019-05-30 10:47:06,382 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration double -> org.hibernate.type.DoubleType@24298c64
2019-05-30 10:47:06,382 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration double -> org.hibernate.type.DoubleType@24298c64
2019-05-30 10:47:06,383 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@24298c64
2019-05-30 10:47:06,405 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2da1525c
2019-05-30 10:47:06,405 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2da1525c
2019-05-30 10:47:06,406 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4909a656
2019-05-30 10:47:06,406 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4909a656
2019-05-30 10:47:06,406 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration string -> org.hibernate.type.StringType@4c3dfe42
2019-05-30 10:47:06,407 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.String -> org.hibernate.type.StringType@4c3dfe42
2019-05-30 10:47:06,407 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3ba6f9ed
2019-05-30 10:47:06,408 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5f7b2c1
2019-05-30 10:47:06,408 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration url -> org.hibernate.type.UrlType@33d5b459
2019-05-30 10:47:06,408 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.net.URL -> org.hibernate.type.UrlType@33d5b459
2019-05-30 10:47:06,409 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Duration -> org.hibernate.type.DurationType@19fe0424
2019-05-30 10:47:06,409 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.Duration -> org.hibernate.type.DurationType@19fe0424
2019-05-30 10:47:06,411 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Instant -> org.hibernate.type.InstantType@8fdd145
2019-05-30 10:47:06,411 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.Instant -> org.hibernate.type.InstantType@8fdd145
2019-05-30 10:47:06,412 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@773dd927
2019-05-30 10:47:06,412 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@773dd927
2019-05-30 10:47:06,413 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2ad70dba
2019-05-30 10:47:06,414 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2ad70dba
2019-05-30 10:47:06,414 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@77daabbc
2019-05-30 10:47:06,415 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@77daabbc
2019-05-30 10:47:06,416 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@ff2417e
2019-05-30 10:47:06,416 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@ff2417e
2019-05-30 10:47:06,417 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7b6d7448
2019-05-30 10:47:06,417 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7b6d7448
2019-05-30 10:47:06,419 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4427e431
2019-05-30 10:47:06,419 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4427e431
2019-05-30 10:47:06,420 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration date -> org.hibernate.type.DateType@4004c900
2019-05-30 10:47:06,420 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Date -> org.hibernate.type.DateType@4004c900
2019-05-30 10:47:06,421 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration time -> org.hibernate.type.TimeType@66801d49
2019-05-30 10:47:06,421 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Time -> org.hibernate.type.TimeType@66801d49
2019-05-30 10:47:06,422 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration timestamp -> org.hibernate.type.TimestampType@3ce2ae9c
2019-05-30 10:47:06,423 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3ce2ae9c
2019-05-30 10:47:06,423 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3ce2ae9c
2019-05-30 10:47:06,423 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@702ae26f
2019-05-30 10:47:06,424 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration calendar -> org.hibernate.type.CalendarType@6aa30bcf
2019-05-30 10:47:06,424 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6aa30bcf
2019-05-30 10:47:06,424 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6aa30bcf
2019-05-30 10:47:06,425 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5cdc5e79
2019-05-30 10:47:06,426 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration locale -> org.hibernate.type.LocaleType@2ddd0fbc
2019-05-30 10:47:06,426 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2ddd0fbc
2019-05-30 10:47:06,427 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration currency -> org.hibernate.type.CurrencyType@58710c8
2019-05-30 10:47:06,427 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@58710c8
2019-05-30 10:47:06,428 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration timezone -> org.hibernate.type.TimeZoneType@31e8791d
2019-05-30 10:47:06,428 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@31e8791d
2019-05-30 10:47:06,428 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration class -> org.hibernate.type.ClassType@6a4be793
2019-05-30 10:47:06,428 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6a4be793
2019-05-30 10:47:06,429 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@40fa44be
2019-05-30 10:47:06,429 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@40fa44be
2019-05-30 10:47:06,429 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@cce1782
2019-05-30 10:47:06,430 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration binary -> org.hibernate.type.BinaryType@11374408
2019-05-30 10:47:06,430 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration byte[] -> org.hibernate.type.BinaryType@11374408
2019-05-30 10:47:06,430 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [B -> org.hibernate.type.BinaryType@11374408
2019-05-30 10:47:06,431 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@74dd64d3
2019-05-30 10:47:06,431 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@74dd64d3
2019-05-30 10:47:06,431 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@74dd64d3
2019-05-30 10:47:06,432 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration row_version -> org.hibernate.type.RowVersionType@43d62463
2019-05-30 10:47:06,433 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration image -> org.hibernate.type.ImageType@1c678f74
2019-05-30 10:47:06,433 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration characters -> org.hibernate.type.CharArrayType@18636c97
2019-05-30 10:47:06,433 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration char[] -> org.hibernate.type.CharArrayType@18636c97
2019-05-30 10:47:06,433 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [C -> org.hibernate.type.CharArrayType@18636c97
2019-05-30 10:47:06,434 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2de6d236
2019-05-30 10:47:06,435 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2de6d236
2019-05-30 10:47:06,435 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2de6d236
2019-05-30 10:47:06,435 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration text -> org.hibernate.type.TextType@33a71fec
2019-05-30 10:47:06,435 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration ntext -> org.hibernate.type.NTextType@2a0622b
2019-05-30 10:47:06,436 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration blob -> org.hibernate.type.BlobType@2fee1f40
2019-05-30 10:47:06,436 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2fee1f40
2019-05-30 10:47:06,437 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5c6848a1
2019-05-30 10:47:06,438 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration clob -> org.hibernate.type.ClobType@50214a53
2019-05-30 10:47:06,438 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@50214a53
2019-05-30 10:47:06,438 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration nclob -> org.hibernate.type.NClobType@66df1a4d
2019-05-30 10:47:06,438 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@66df1a4d
2019-05-30 10:47:06,439 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1f8f8afd
2019-05-30 10:47:06,439 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@58afa5cc
2019-05-30 10:47:06,440 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration serializable -> org.hibernate.type.SerializableType@6d86811
2019-05-30 10:47:06,443 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration object -> org.hibernate.type.ObjectType@756510ca
2019-05-30 10:47:06,443 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@756510ca
2019-05-30 10:47:06,444 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@365bf00f
2019-05-30 10:47:06,444 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6b65454e
2019-05-30 10:47:06,444 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@461e39ef
2019-05-30 10:47:06,444 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7701026a
2019-05-30 10:47:06,444 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1eb35f0d
2019-05-30 10:47:06,444 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5fbd26a0
2019-05-30 10:47:06,444 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@685bbdf9
2019-05-30 10:47:06,444 DEBUG org.hibernate.type.BasicTypeRegistry [restartedMain] Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1736f0ca
2019-05-30 10:47:07,148 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2019-05-30 10:47:07,268 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [restartedMain] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7898f1a4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@11e3dfeb]
2019-05-30 10:47:08,248 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [restartedMain] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7898f1a4] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@14abdab2]
2019-05-30 10:47:11,197 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [restartedMain] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@14abdab2] for TypeConfiguration
2019-05-30 10:47:13,319 INFO com.manytomany.ManyToManyApplication [restartedMain] Started ManyToManyApplication in 30.941 seconds (JVM running for 38.79)
2019-05-30 10:47:37,261 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-05-30 10:47:46,727 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] select project0_.project_id as project_1_2_0_, project0_.project_description as project_2_2_0_, project0_.project_name as project_3_2_0_ from project project0_ where project0_.project_id=?
2019-05-30 10:47:46,788 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [INTEGER] - [9]
2019-05-30 10:47:46,916 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([project_2_2_0_] : [VARCHAR]) - [Project 1 Details]
2019-05-30 10:47:46,917 TRACE org.hibernate.type.descriptor.sql.BasicExtractor [http-nio-8080-exec-4] extracted value ([project_3_2_0_] : [VARCHAR]) - [Project 1]
2019-05-30 10:47:46,993 TRACE org.hibernate.type.CollectionType [http-nio-8080-exec-4] Created collection wrapper: [com.manytomany.model.Project.employees#9]
2019-05-30 10:47:47,061 DEBUG org.hibernate.SQL [http-nio-8080-exec-4] delete from project where project_id=?
2019-05-30 10:47:47,062 TRACE org.hibernate.type.descriptor.sql.BasicBinder [http-nio-8080-exec-4] binding parameter [1] as [INTEGER] - [9]
2019-05-30 10:47:47,228 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-4] SQL Error: 1451, SQLState: 23000
2019-05-30 10:47:47,229 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-4] Cannot delete or update a parent row: a foreign key constraint fails (`employeeDB`.`employee_project`, CONSTRAINT `FK4yddvnm7283a40plkcti66wv9` FOREIGN KEY (`project_id`) REFERENCES `project` (`project_id`))
2019-05-30 10:47:47,232 INFO org.hibernate.engine.jdbc.batch.internal.AbstractBatchImpl [http-nio-8080-exec-4] HHH000010: On release of batch it still contained JDBC statements
2019-05-30 10:47:47,233 ERROR org.hibernate.internal.ExceptionMapperStandardImpl [http-nio-8080-exec-4] HHH000346: Error during managed flush [org.hibernate.exception.ConstraintViolationException: could not execute statement]
2019-05-30 11:14:17,131 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [Thread-9] Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@14abdab2] for TypeConfiguration
2019-05-30 11:14:17,259 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [Thread-9] Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@73a18041] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@14abdab2]
2019-05-30 11:14:17,434 INFO com.zaxxer.hikari.HikariDataSource [Thread-9] HikariPool-1 - Shutdown initiated...
2019-05-30 11:14:17,637 INFO com.zaxxer.hikari.HikariDataSource [Thread-9] HikariPool-1 - Shutdown completed.
